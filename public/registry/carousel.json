{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "carousel",
  "title": "Carousel",
  "description": "A minimalistic carousel component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "carousel.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect, useRef, FC, ReactNode } from \"react\";\nimport { motion, PanInfo } from \"framer-motion\";\n\ninterface CardData {\n  id: number;\n  imageUrl: string;\n  title: string;\n}\n\ninterface IconProps {\n  className?: string;\n}\n\ninterface BadgeProps {\n  children: ReactNode;\n  className?: string;\n}\n\ninterface CardProps {\n  card: CardData;\n  index: number;\n  activeIndex: number;\n  totalCards: number;\n}\n\nconst SparklesIcon: FC<IconProps> = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={className}\n  >\n    <path d=\"M9.93 2.25 12 7.5l2.07-5.25a.5.5 0 0 1 .9 0L17.25 8.5l4.16.34a.5.5 0 0 1 .29.88l-3.2 3.1.95 4.5a.5.5 0 0 1-.73.53L12 14.5l-3.72 2.33a.5.5 0 0 1-.73-.53l.95-4.5-3.2-3.1a.5.5 0 0 1 .29-.88l4.16-.34Z\" />\n  </svg>\n);\n\nconst ChevronLeftIcon: FC<IconProps> = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={className}\n  >\n    <path d=\"m15 18-6-6 6-6\" />\n  </svg>\n);\n\nconst ChevronRightIcon: FC<IconProps> = ({ className }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className={className}\n  >\n    <path d=\"m9 18 6-6-6-6\" />\n  </svg>\n);\n\nconst Badge: FC<BadgeProps> = ({ children, className }) => (\n  <div\n    className={`inline-flex items-center gap-1.5 rounded-full border px-3 py-1.5 text-sm font-medium ${className}`}\n  >\n    {children}\n  </div>\n);\n\nconst cardData: CardData[] = [\n  {\n    id: 1,\n    imageUrl:\n      \"https://i.pinimg.com/736x/d6/8a/12/d68a121e960094f99ad8acd37505fb7d.jpg\",\n    title: \"Crimson Forest\",\n  },\n  {\n    id: 2,\n    imageUrl:\n      \"https://i.pinimg.com/736x/21/16/f7/2116f71f9d51d875e44d809f074ff079.jpg\",\n    title: \"Misty Mountains\",\n  },\n  {\n    id: 3,\n    imageUrl:\n      \"https://i.pinimg.com/1200x/fe/c2/0d/fec20d2958059b8463bffb138d4eaac6.jpg\",\n    title: \"Floating Islands\",\n  },\n  {\n    id: 4,\n    imageUrl:\n      \"https://i.pinimg.com/736x/84/dc/62/84dc62de850a34a9d420c97f3a2d58f4.jpg\",\n    title: \"Crystal Cave\",\n  },\n  {\n    id: 5,\n    imageUrl:\n      \"https://i.pinimg.com/1200x/be/c3/7e/bec37e2c43e703f922f887db2578ce2e.jpg\",\n    title: \"Sunset Peaks\",\n  },\n  {\n    id: 6,\n    imageUrl:\n      \"https://i.pinimg.com/736x/47/dd/47/47dd47b0d66c2fa641e03e370bcb5433.jpg\",\n    title: \"Night Sky\",\n  },\n  {\n    id: 7,\n    imageUrl:\n      \"https://i.pinimg.com/736x/05/01/bc/0501bcd327d9df915e83154bbf9456e3.jpg\",\n    title: \"Ancient Ruins\",\n  },\n  {\n    id: 8,\n    imageUrl:\n      \"https://i.pinimg.com/736x/c1/46/be/c146bebffca026d2c4fa76cc85aac917.jpg\",\n    title: \"Magical Tree\",\n  },\n  {\n    id: 9,\n    imageUrl:\n      \"https://i.pinimg.com/736x/91/7a/51/917a51df0d444def3cade8d626305a67.jpg\",\n    title: \"Celestial Waters\",\n  },\n];\n\nexport default function Carousel() {\n  const [activeIndex, setActiveIndex] = useState(\n    Math.floor(cardData.length / 2)\n  );\n  const [isPaused, setIsPaused] = useState(false);\n  const autoplayIntervalRef = useRef<NodeJS.Timeout | null>(null);\n  const autoplayDelay = 3000;\n\n  const goToNext = () => {\n    setActiveIndex((prev) => (prev + 1) % cardData.length);\n  };\n\n  useEffect(() => {\n    if (!isPaused) {\n      autoplayIntervalRef.current = setInterval(goToNext, autoplayDelay);\n    }\n    return () => {\n      if (autoplayIntervalRef.current) {\n        clearInterval(autoplayIntervalRef.current);\n      }\n    };\n  }, [isPaused, activeIndex]);\n\n  const changeSlide = (newIndex: number) => {\n    const newSafeIndex = (newIndex + cardData.length) % cardData.length;\n    setActiveIndex(newSafeIndex);\n    if (autoplayIntervalRef.current) {\n      clearInterval(autoplayIntervalRef.current);\n    }\n    if (!isPaused) {\n      autoplayIntervalRef.current = setInterval(goToNext, autoplayDelay);\n    }\n  };\n\n  const onDragEnd = (\n    event: MouseEvent | TouchEvent | PointerEvent,\n    info: PanInfo\n  ) => {\n    const dragThreshold = 75;\n    const dragOffset = info.offset.x;\n    if (dragOffset > dragThreshold) {\n      changeSlide(activeIndex - 1);\n    } else if (dragOffset < -dragThreshold) {\n      changeSlide(activeIndex + 1);\n    }\n  };\n\n  return (\n    <section className=\"w-full flex-col items-center justify-center font-sans overflow-hidden\">\n      <div\n        className=\"w-full max-w-5xl mx-auto p-4\"\n        onMouseEnter={() => setIsPaused(true)}\n        onMouseLeave={() => setIsPaused(false)}\n      >\n        <div className=\"relative flex w-full flex-col rounded-3xl border border-white/10 dark:border-white/10 bg-white dark:bg-neutral-900 p-4 pt-6 md:p-6\">\n          <Badge className=\"absolute left-4 top-6 rounded-xl border border-gray-300 dark:border-white/10 text-base text-gray-700 dark:text-white/80 bg-gray-100/80 dark:bg-black/20 backdrop-blur-sm md:left-6\">\n            <SparklesIcon className=\"fill-[#EEBDE0] stroke-1 text-neutral-800 h-5 w-5 mr-1\" />\n            Enhanced Carousel\n          </Badge>\n\n          <div className=\"relative w-full h-[280px] md:h-[400px] flex items-center justify-center overflow-hidden pt-12\">\n            <motion.div\n              className=\"w-full h-full flex items-center justify-center\"\n              drag=\"x\"\n              dragConstraints={{ left: 0, right: 0 }}\n              dragElastic={0.2}\n              onDragEnd={onDragEnd}\n            >\n              {cardData.map((card, index) => (\n                <Card\n                  key={card.id}\n                  card={card}\n                  index={index}\n                  activeIndex={activeIndex}\n                  totalCards={cardData.length}\n                />\n              ))}\n            </motion.div>\n          </div>\n\n          <div className=\"flex items-center justify-center gap-6 mt-6\">\n            <button\n              onClick={() => changeSlide(activeIndex - 1)}\n              className=\"p-2 rounded-full bg-gray-100 dark:bg-white/5 hover:bg-gray-200 dark:hover:bg-white/10 border border-gray-300 dark:border-white/10 text-gray-700 dark:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-pink-500\"\n            >\n              <ChevronLeftIcon className=\"w-6 h-6\" />\n            </button>\n\n            <div className=\"flex items-center justify-center gap-2\">\n              {cardData.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => changeSlide(index)}\n                  className={`h-2 rounded-full transition-all duration-300 focus:outline-none ${\n                    activeIndex === index\n                      ? \"w-6 bg-pink-400\"\n                      : \"w-2 bg-gray-300 dark:bg-neutral-600 hover:bg-gray-400 dark:hover:bg-neutral-500\"\n                  }`}\n                  aria-label={`Go to slide ${index + 1}`}\n                />\n              ))}\n            </div>\n\n            <button\n              onClick={() => changeSlide(activeIndex + 1)}\n              className=\"p-2 rounded-full bg-gray-100 dark:bg-white/5 hover:bg-gray-200 dark:hover:bg-white/10 border border-gray-300 dark:border-white/10 text-gray-700 dark:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-pink-500\"\n            >\n              <ChevronRightIcon className=\"w-6 h-6\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nfunction Card({ card, index, activeIndex, totalCards }: CardProps) {\n  let offset = index - activeIndex;\n  if (offset > totalCards / 2) {\n    offset -= totalCards;\n  } else if (offset < -totalCards / 2) {\n    offset += totalCards;\n  }\n\n  const isVisible = Math.abs(offset) <= 1;\n\n  const animate = {\n    x: `${offset * 50}%`,\n    scale: offset === 0 ? 1 : 0.8,\n    zIndex: totalCards - Math.abs(offset),\n    opacity: isVisible ? 1 : 0,\n    transition: { type: \"spring\" as const, stiffness: 260, damping: 30 },\n  };\n\n  return (\n    <motion.div\n      className=\"absolute w-1/2 md:w-1/3 h-[95%]\"\n      style={{\n        transformStyle: \"preserve-3d\",\n      }}\n      animate={animate}\n      initial={false}\n    >\n      <div className=\"relative w-full h-full rounded-3xl shadow-2xl overflow-hidden bg-gray-200 dark:bg-neutral-800\">\n        <img\n          src={card.imageUrl}\n          alt={card.title}\n          className=\"w-full h-full object-cover pointer-events-none\"\n          onError={(e) => {\n            const target = e.target as HTMLImageElement;\n            target.onerror = null;\n            target.src =\n              \"https://placehold.co/400x600/1e1e1e/ffffff?text=Image+Missing\";\n          }}\n        />\n        <div className=\"absolute bottom-0 left-0 right-0 p-4 bg-gradient-to-t from-black/70 to-transparent\">\n          <h4 className=\"text-white text-lg font-semibold\">{card.title}</h4>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "carousel2.tsx",
      "content": "\"use client\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface Story {\n  id: number;\n  imageUrl: string;\n  title: string;\n}\n\nconst storiesData: Story[] = [\n  {\n    id: 1,\n    imageUrl:\n      \"https://i.pinimg.com/736x/d6/8a/12/d68a121e960094f99ad8acd37505fb7d.jpg\",\n    title: \"Crimson Forest\",\n  },\n  {\n    id: 2,\n    imageUrl:\n      \"https://i.pinimg.com/736x/21/16/f7/2116f71f9d51d875e44d809f074ff079.jpg\",\n    title: \"Misty Mountains\",\n  },\n  {\n    id: 3,\n    imageUrl:\n      \"https://i.pinimg.com/1200x/fe/c2/0d/fec20d2958059b8463bffb138d4eaac6.jpg\",\n    title: \"Floating Islands\",\n  },\n  {\n    id: 4,\n    imageUrl:\n      \"https://i.pinimg.com/736x/84/dc/62/84dc62de850a34a9d420c97f3a2d58f4.jpg\",\n    title: \"Crystal Cave\",\n  },\n  {\n    id: 5,\n    imageUrl:\n      \"https://i.pinimg.com/1200x/be/c3/7e/bec37e2c43e703f922f887db2578ce2e.jpg\",\n    title: \"Sunset Peaks\",\n  },\n  {\n    id: 6,\n    imageUrl:\n      \"https://i.pinimg.com/736x/47/dd/47/47dd47b0d66c2fa641e03e370bcb5433.jpg\",\n    title: \"Night Sky\",\n  },\n  {\n    id: 7,\n    imageUrl:\n      \"https://i.pinimg.com/736x/05/01/bc/0501bcd327d9df915e83154bbf9456e3.jpg\",\n    title: \"Ancient Ruins\",\n  },\n  {\n    id: 8,\n    imageUrl:\n      \"https://i.pinimg.com/736x/c1/46/be/c146bebffca026d2c4fa76cc85aac917.jpg\",\n    title: \"Magical Tree\",\n  },\n  {\n    id: 9,\n    imageUrl:\n      \"https://i.pinimg.com/736x/91/7a/51/917a51df0d444def3cade8d626305a67.jpg\",\n    title: \"Celestial Waters\",\n  },\n];\n\nconst StoryCard = ({ story }: { story: Story }) => {\n  return (\n    <motion.div\n      className=\"relative w-72 h-96 flex-shrink-0 rounded-lg overflow-hidden shadow-xl group\"\n      whileHover={{ y: -8, transition: { type: \"spring\", stiffness: 300 } }}\n    >\n      <img\n        src={story.imageUrl}\n        alt={story.title}\n        className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-110 transition-transform duration-700 pointer-events-none\"\n      />\n\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"></div>\n\n      <div className=\"relative z-10 flex flex-col justify-end h-full p-6 text-white\">\n        <h3 className=\"font-bold text-2xl tracking-wide\">{story.title}</h3>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default function CarouselCards() {\n  const trackRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [dragConstraint, setDragConstraint] = useState(0);\n\n  useEffect(() => {\n    const calculateConstraints = () => {\n      if (containerRef.current && trackRef.current) {\n        const containerWidth = containerRef.current.offsetWidth;\n        const trackWidth = trackRef.current.scrollWidth;\n        setDragConstraint(containerWidth - trackWidth);\n      }\n    };\n\n    calculateConstraints();\n    window.addEventListener(\"resize\", calculateConstraints);\n\n    return () => window.removeEventListener(\"resize\", calculateConstraints);\n  }, []);\n\n  return (\n    <div className=\"font-sans w-full py-12 md:py-20 flex flex-col items-center justify-center\">\n      <div className=\"w-full max-w-7xl mx-auto px-4\">\n        <header className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-white\">\n            Explore Worlds\n          </h1>\n          <p className=\"mt-4 text-lg text-gray-400\">\n            Drag to journey through magical landscapes.\n          </p>\n        </header>\n\n        <motion.div\n          ref={containerRef}\n          className=\"overflow-hidden cursor-grab\"\n          whileTap={{ cursor: \"grabbing\" }}\n        >\n          <motion.div\n            ref={trackRef}\n            className=\"flex space-x-6 pb-6 px-4\"\n            drag=\"x\"\n            dragConstraints={{\n              right: 0,\n              left: dragConstraint - 32,\n            }}\n            dragElastic={0.15}\n          >\n            {storiesData.map((story) => (\n              <StoryCard key={story.id} story={story} />\n            ))}\n          </motion.div>\n        </motion.div>\n\n        <div className=\"mt-10 flex items-center justify-center\">\n          <a\n            href=\"#\"\n            className=\"text-gray-300 font-semibold hover:text-white transition-colors duration-300 group\"\n          >\n            Discover More\n            <span className=\"inline-block transition-transform duration-300 group-hover:translate-x-1 ml-1\">\n              &rarr;\n            </span>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "enhanced-carousel.tsx",
      "content": "\"use client\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface Story {\n  id: number;\n  imageUrl: string;\n  title: string;\n}\n\nconst storiesData: Story[] = [\n  {\n    id: 1,\n    imageUrl:\n      \"https://i.pinimg.com/736x/d6/8a/12/d68a121e960094f99ad8acd37505fb7d.jpg\",\n    title: \"Crimson Forest\",\n  },\n  {\n    id: 2,\n    imageUrl:\n      \"https://i.pinimg.com/736x/21/16/f7/2116f71f9d51d875e44d809f074ff079.jpg\",\n    title: \"Misty Mountains\",\n  },\n  {\n    id: 3,\n    imageUrl:\n      \"https://i.pinimg.com/1200x/fe/c2/0d/fec20d2958059b8463bffb138d4eaac6.jpg\",\n    title: \"Floating Islands\",\n  },\n  {\n    id: 4,\n    imageUrl:\n      \"https://i.pinimg.com/736x/84/dc/62/84dc62de850a34a9d420c97f3a2d58f4.jpg\",\n    title: \"Crystal Cave\",\n  },\n  {\n    id: 5,\n    imageUrl:\n      \"https://i.pinimg.com/1200x/be/c3/7e/bec37e2c43e703f922f887db2578ce2e.jpg\",\n    title: \"Sunset Peaks\",\n  },\n  {\n    id: 6,\n    imageUrl:\n      \"https://i.pinimg.com/736x/47/dd/47/47dd47b0d66c2fa641e03e370bcb5433.jpg\",\n    title: \"Night Sky\",\n  },\n  {\n    id: 7,\n    imageUrl:\n      \"https://i.pinimg.com/736x/05/01/bc/0501bcd327d9df915e83154bbf9456e3.jpg\",\n    title: \"Ancient Ruins\",\n  },\n  {\n    id: 8,\n    imageUrl:\n      \"https://i.pinimg.com/736x/c1/46/be/c146bebffca026d2c4fa76cc85aac917.jpg\",\n    title: \"Magical Tree\",\n  },\n  {\n    id: 9,\n    imageUrl:\n      \"https://i.pinimg.com/736x/91/7a/51/917a51df0d444def3cade8d626305a67.jpg\",\n    title: \"Celestial Waters\",\n  },\n];\n\nconst StoryCard = ({ story }: { story: Story }) => {\n  return (\n    <motion.div\n      className=\"relative w-72 h-96 flex-shrink-0 rounded-lg overflow-hidden shadow-xl group\"\n      whileHover={{ y: -8, transition: { type: \"spring\", stiffness: 300 } }}\n    >\n      <img\n        src={story.imageUrl}\n        alt={story.title}\n        className=\"absolute inset-0 w-full h-full object-cover group-hover:scale-110 transition-transform duration-700 pointer-events-none\"\n      />\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent\"></div>\n      <div className=\"relative z-10 flex flex-col justify-end h-full p-6 text-white\">\n        <h3 className=\"font-bold text-2xl tracking-wide\">{story.title}</h3>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default function CarouselCards() {\n  const trackRef = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [dragConstraint, setDragConstraint] = useState(0);\n\n  useEffect(() => {\n    const calculateConstraints = () => {\n      if (containerRef.current && trackRef.current) {\n        const containerWidth = containerRef.current.offsetWidth;\n        const trackWidth = trackRef.current.scrollWidth;\n        setDragConstraint(containerWidth - trackWidth);\n      }\n    };\n\n    calculateConstraints();\n    window.addEventListener(\"resize\", calculateConstraints);\n\n    return () => window.removeEventListener(\"resize\", calculateConstraints);\n  }, []);\n\n  return (\n    <div className=\"font-sans w-full py-12 md:py-20 flex flex-col items-center justify-center\">\n      <div className=\"w-full max-w-7xl mx-auto px-4\">\n        <header className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-black dark:text-white \">\n            Explore Worlds\n          </h1>\n          <p className=\"mt-4 text-lg text-gray-400\">\n            Drag to journey through magical landscapes.\n          </p>\n        </header>\n\n        <motion.div\n          ref={containerRef}\n          className=\"overflow-hidden cursor-grab\"\n          whileTap={{ cursor: \"grabbing\" }}\n        >\n          <motion.div\n            ref={trackRef}\n            className=\"flex space-x-6 pb-6 px-4\"\n            drag=\"x\"\n            dragConstraints={{\n              right: 0,\n              left: dragConstraint - 32,\n            }}\n            dragElastic={0.15}\n          >\n            {storiesData.map((story) => (\n              <StoryCard key={story.id} story={story} />\n            ))}\n          </motion.div>\n        </motion.div>\n\n        <div className=\"mt-10 flex items-center justify-center\">\n          <a\n            href=\"#\"\n            className=\"text-gray-300 font-semibold hover:text-white transition-colors duration-300 group\"\n          >\n            Discover More\n            <span className=\"inline-block transition-transform duration-300 group-hover:translate-x-1 ml-1\">\n              &rarr;\n            </span>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "imagecarousel.tsx",
      "content": "\"use client\";\nimport React, { useState, useRef, useEffect } from \"react\";\n\nconst classNames = (\n  ...classes: (string | boolean | undefined | null)[]\n): string => {\n  return classes.filter(Boolean).join(\" \");\n};\n\ninterface Person {\n  name: string;\n  title: string;\n  img: string;\n}\n\nconst persons: Person[] = [\n  {\n    name: \"Aria Rossi\",\n    title: \"Lead Architect\",\n    img: \"https://i.pinimg.com/736x/d6/8a/12/d68a121e960094f99ad8acd37505fb7d.jpg\",\n  },\n  {\n    name: \"Leo Carter\",\n    title: \"Creative Director\",\n    img: \"https://i.pinimg.com/736x/21/16/f7/2116f71f9d51d875e44d809f074ff079.jpg\",\n  },\n  {\n    name: \"Mia Chen\",\n    title: \"Senior Developer\",\n    img: \"https://i.pinimg.com/1200x/fe/c2/0d/fec20d2958059b8463bffb138d4eaac6.jpg\",\n  },\n  {\n    name: \"Kai Tanaka\",\n    title: \"UX/UI Designer\",\n    img: \"https://i.pinimg.com/736x/84/dc/62/84dc62de850a34a9d420c97f3a2d58f4.jpg\",\n  },\n  {\n    name: \"Zoe Williams\",\n    title: \"Project Manager\",\n    img: \"https://i.pinimg.com/1200x/be/c3/7e/bec37e2c43e703f922f887db2578ce2e.jpg\",\n  },\n  {\n    name: \"Ethan Hunt\",\n    title: \"Marketing Head\",\n    img: \"https://i.pinimg.com/736x/47/dd/47/47dd47b0d66c2fa641e03e370bcb5433.jpg\",\n  },\n  {\n    name: \"Chloe Garcia\",\n    title: \"Data Scientist\",\n    img: \"https://i.pinimg.com/736x/05/01/bc/0501bcd327d9df915e83154bbf9456e3.jpg\",\n  },\n  {\n    name: \"Noah King\",\n    title: \"Brand Strategist\",\n    img: \"https://i.pinimg.com/736x/c1/46/be/c146bebffca026d2c4fa76cc85aac917.jpg\",\n  },\n  {\n    name: \"Ava Martinez\",\n    title: \"Content Creator\",\n    img: \"https://i.pinimg.com/736x/91/7a/51/917a51df0d444def3cade8d626305a67.jpg\",\n  },\n];\n\nfunction ImageCarousel() {\n  const [activeItem, setActiveItem] = useState(Math.floor(persons.length / 2));\n  const wrapperRef = useRef<HTMLUListElement>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    if (!wrapperRef.current) return;\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    wrapperRef.current.style.setProperty(\n      \"--transition\",\n      \"600ms cubic-bezier(0.22, 0.61, 0.36, 1)\"\n    );\n\n    timeoutRef.current = setTimeout(() => {\n      wrapperRef.current?.style.removeProperty(\"--transition\");\n    }, 900);\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [activeItem]);\n\n  return (\n    <div className=\"w-full font-sans\">\n      <div className=\"w-full max-w-7xl p-4 sm:p-6 md:p-8\">\n        <ul\n          ref={wrapperRef}\n          className=\"flex w-full flex-col gap-2 md:h-[640px] md:flex-row md:gap-[1.5%]\"\n        >\n          {persons.map((person, index) => (\n            <li\n              onClick={() => setActiveItem(index)}\n              aria-current={activeItem === index}\n              className={classNames(\n                \"relative group cursor-pointer transition-all duration-500 ease-in-out\",\n                \"md:w-[8%]\",\n                \"md:[&[aria-current='true']]:w-[48%]\",\n                \"md:[transition:width_var(--transition,300ms_ease_in)]\"\n              )}\n              key={person.name}\n            >\n              <div className=\"relative h-full w-full overflow-hidden rounded-2xl bg-black shadow-2xl transition-transform duration-500 ease-in-out group-hover:scale-105 group-hover:z-10 transform-gpu\">\n                <img\n                  className={classNames(\n                    \"absolute left-1/2 top-1/2 h-full w-auto max-w-none -translate-x-1/2 -translate-y-1/2 object-cover transition-all duration-500 ease-in-out\",\n                    activeItem === index\n                      ? \"scale-105 grayscale-0\"\n                      : \"scale-100 grayscale\"\n                  )}\n                  src={person.img}\n                  alt={person.name}\n                  width=\"590\"\n                  height=\"640\"\n                />\n                <div\n                  className={classNames(\n                    \"absolute inset-0 transition-opacity duration-500\",\n                    activeItem === index ? \"opacity-100\" : \"opacity-0\",\n                    \"bg-gradient-to-t from-black/70 via-black/30 to-transparent\",\n                    \"md:absolute\"\n                  )}\n                />\n                <div\n                  className={classNames(\n                    \"absolute bottom-0 left-0 w-full p-6 text-white transition-[transform,opacity] duration-700 ease-in-out md:p-8\",\n                    activeItem === index\n                      ? \"translate-y-0 opacity-100\"\n                      : \"translate-y-8 opacity-0\"\n                  )}\n                >\n                  <p className=\"text-sm font-light uppercase tracking-widest text-gray-200 md:text-base\">\n                    {person.title}\n                  </p>\n                  <p\n                    className=\"text-2xl font-bold tracking-tight md:text-5xl\"\n                    style={{ textShadow: \"2px 2px 8px rgba(0,0,0,0.8)\" }}\n                  >\n                    {person.name}\n                  </p>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCarousel;\n",
      "type": "registry:ui"
    }
  ]
}