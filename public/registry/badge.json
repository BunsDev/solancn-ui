{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "title": "Badge",
  "description": "A minimalistic badge component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "badge.tsx",
      "content": "\"use client\";\nimport type React from \"react\";\nimport { Badge } from \"./badge\";\n\n// Icons\nconst CalendarIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t\tclassName=\"lucide lucide-calendar-days\"\n\t>\n\t\t<rect width=\"20\" height=\"18\" x=\"2\" y=\"4\" rx=\"2\" />\n\t\t<line x1=\"16\" x2=\"16\" y1=\"2\" y2=\"6\" />\n\t\t<line x1=\"8\" x2=\"8\" y1=\"2\" y2=\"6\" />\n\t\t<line x1=\"2\" x2=\"22\" y1=\"10\" y2=\"10\" />\n\t</svg>\n);\n\nconst SendIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t\tclassName=\"lucide lucide-send\"\n\t>\n\t\t<path d=\"M22 2L11 13\" />\n\t\t<path d=\"M22 2l-7 20-4-9-9-4z\" />\n\t</svg>\n);\n\nconst StarIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t>\n\t\t<polygon points=\"12,2 15.09,8.26 22,9.27 17,14.14 18.18,21.02 12,17.77 5.82,21.02 7,14.14 2,9.27 8.91,8.26\" />\n\t</svg>\n);\n\nconst HeartIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t>\n\t\t<path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\n\t</svg>\n);\n\nconst ShieldIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t>\n\t\t<path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\" />\n\t</svg>\n);\n\nconst TrendingUpIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t>\n\t\t<polyline points=\"22,7 13.5,15.5 8.5,10.5 2,17\" />\n\t\t<polyline points=\"16,7 22,7 22,13\" />\n\t</svg>\n);\n\nconst ZapIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t>\n\t\t<polygon points=\"13,2 3,14 12,14 11,22 21,10 12,10\" />\n\t</svg>\n);\n\nconst CrownIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t>\n\t\t<path d=\"m2 4 3 12h14l3-12-6 7-4-7-4 7-6-7zm3 16h14\" />\n\t</svg>\n);\n\n// Types for custom badge components\ninterface CustomBadgeProps {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\t[key: string]: React.ReactNode | string | undefined | (() => void);\n}\n\ninterface NeonBadgeProps extends CustomBadgeProps {\n\tcolor?: \"blue\" | \"purple\" | \"pink\" | \"green\" | \"orange\" | \"red\";\n}\n\ninterface GradientBadgeProps extends CustomBadgeProps {\n\tgradient?: \"blue\" | \"purple\" | \"green\" | \"orange\" | \"rainbow\" | \"sunset\";\n}\n\n// Custom Glassy Badge Components\nconst GlassBadge = ({\n\tchildren,\n\tclassName = \"\",\n\t...props\n}: CustomBadgeProps) => (\n\t<div\n\t\tclassName={`inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full backdrop-blur-md bg-white/20 dark:bg-black/20 border border-white/30 dark:border-white/10 shadow-lg hover:shadow-xl transition-all duration-300 ${className}`}\n\t\t{...props}\n\t>\n\t\t{children}\n\t</div>\n);\n\nconst NeonBadge = ({\n\tchildren,\n\tcolor = \"blue\",\n\tclassName = \"\",\n\t...props\n}: NeonBadgeProps) => {\n\tconst colors = {\n\t\tblue: \"shadow-blue-500/50 border-blue-400/50 text-blue-300\",\n\t\tpurple: \"shadow-purple-500/50 border-purple-400/50 text-purple-300\",\n\t\tpink: \"shadow-pink-500/50 border-pink-400/50 text-pink-300\",\n\t\tgreen: \"shadow-green-500/50 border-green-400/50 text-green-300\",\n\t\torange: \"shadow-orange-500/50 border-orange-400/50 text-orange-300\",\n\t\tred: \"shadow-red-500/50 border-red-400/50 text-red-300\",\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full backdrop-blur-md bg-black/40 border-2 shadow-2xl hover:shadow-3xl transition-all duration-300 animate-pulse ${colors[color]} ${className}`}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nconst GradientBadge = ({\n\tchildren,\n\tgradient = \"blue\",\n\tclassName = \"\",\n\t...props\n}: GradientBadgeProps) => {\n\tconst gradients = {\n\t\tblue: \"bg-gradient-to-r from-blue-500/80 to-cyan-500/80\",\n\t\tpurple: \"bg-gradient-to-r from-purple-500/80 to-pink-500/80\",\n\t\tgreen: \"bg-gradient-to-r from-green-500/80 to-emerald-500/80\",\n\t\torange: \"bg-gradient-to-r from-orange-500/80 to-red-500/80\",\n\t\trainbow:\n\t\t\t\"bg-gradient-to-r from-red-500/80 via-yellow-500/80 via-green-500/80 via-blue-500/80 to-purple-500/80\",\n\t\tsunset:\n\t\t\t\"bg-gradient-to-r from-orange-400/80 via-pink-500/80 to-purple-600/80\",\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full backdrop-blur-md ${gradients[gradient]} border border-white/30 shadow-lg text-white hover:scale-105 transition-all duration-300 ${className}`}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nconst FrostedBadge = ({\n\tchildren,\n\tclassName = \"\",\n\t...props\n}: CustomBadgeProps) => (\n\t<div\n\t\tclassName={`inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full backdrop-blur-xl bg-white/10 dark:bg-white/5 border border-white/20 dark:border-white/10 shadow-2xl hover:bg-white/20 dark:hover:bg-white/10 transition-all duration-300 ${className}`}\n\t\t{...props}\n\t>\n\t\t{children}\n\t</div>\n);\n\nconst HolographicBadge = ({\n\tchildren,\n\tclassName = \"\",\n\t...props\n}: CustomBadgeProps) => (\n\t<div\n\t\tclassName={`inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full backdrop-blur-md bg-gradient-to-r from-cyan-500/20 via-purple-500/20 to-pink-500/20 border border-white/30 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 animate-gradient-x ${className}`}\n\t\tstyle={{\n\t\t\tbackground:\n\t\t\t\t\"linear-gradient(-45deg, rgba(59, 130, 246, 0.3), rgba(147, 51, 234, 0.3), rgba(236, 72, 153, 0.3), rgba(59, 130, 246, 0.3))\",\n\t\t\tbackgroundSize: \"400% 400%\",\n\t\t\tanimation: \"gradient 3s ease infinite\",\n\t\t}}\n\t\t{...props}\n\t>\n\t\t{children}\n\t</div>\n);\n\nconst CrystalBadge = ({\n\tchildren,\n\tclassName = \"\",\n\t...props\n}: CustomBadgeProps) => (\n\t<div\n\t\tclassName={`inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full backdrop-blur-sm bg-gradient-to-br from-white/30 to-white/10 dark:from-white/20 dark:to-white/5 border-2 border-white/40 dark:border-white/20 shadow-2xl hover:shadow-3xl transition-all duration-300 hover:rotate-1 ${className}`}\n\t\t{...props}\n\t>\n\t\t{children}\n\t</div>\n);\n\nconst MetallicBadge = ({\n\tchildren,\n\tclassName = \"\",\n\t...props\n}: CustomBadgeProps) => (\n\t<div\n\t\tclassName={`inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full bg-gradient-to-r from-gray-400 via-gray-300 to-gray-400 dark:from-gray-600 dark:via-gray-500 dark:to-gray-600 text-gray-800 dark:text-gray-200 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-300 dark:border-gray-500 ${className}`}\n\t\t{...props}\n\t>\n\t\t{children}\n\t</div>\n);\n\nconst GoldBadge = ({\n\tchildren,\n\tclassName = \"\",\n\t...props\n}: CustomBadgeProps) => (\n\t<div\n\t\tclassName={`inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full bg-gradient-to-r from-yellow-400 via-yellow-300 to-yellow-400 text-yellow-900 shadow-lg hover:shadow-xl transition-all duration-300 border border-yellow-300 hover:scale-105 ${className}`}\n\t\t{...props}\n\t>\n\t\t{children}\n\t</div>\n);\n\nexport default function BadgeView() {\n\treturn (\n\t\t<div className=\"space-y-8 p-6\">\n\t\t\t{/* Original Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tOriginal Badge Variants\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-2\">\n\t\t\t\t\t<Badge>Badge</Badge>\n\t\t\t\t\t<Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n\t\t\t\t\t\tSoft (Default)\n\t\t\t\t\t</Badge>\n\t\t\t\t\t<Badge className=\"bg-blue-600 text-white\">Solid</Badge>\n\t\t\t\t\t<Badge className=\"border border-blue-300 text-blue-700 dark:border-blue-600 dark:text-blue-300\">\n\t\t\t\t\t\tOutline\n\t\t\t\t\t</Badge>\n\t\t\t\t\t<Badge\n\t\t\t\t\t\tclassName=\"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\n\t\t\t\t\t\tonDismiss={() => console.log(\"Dismissed!\")}\n\t\t\t\t\t\ticonLeft={<CalendarIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\tDismissible\n\t\t\t\t\t</Badge>\n\t\t\t\t\t<Badge\n\t\t\t\t\t\tclassName=\"bg-purple-600 text-white\"\n\t\t\t\t\t\tonClick={() => alert(\"Badge clicked!\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tClickable\n\t\t\t\t\t</Badge>\n\t\t\t\t\t<Badge\n\t\t\t\t\t\tclassName=\"border border-orange-300 text-orange-700 dark:border-orange-600 dark:text-orange-300\"\n\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\ticonRight={<SendIcon />}\n\t\t\t\t\t>\n\t\t\t\t\t\tLink\n\t\t\t\t\t</Badge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Glassy Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tGlassy Effect Badges\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<GlassBadge>Glass Basic</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-blue-600 dark:text-blue-400\">\n\t\t\t\t\t\tGlass Blue\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-purple-600 dark:text-purple-400\">\n\t\t\t\t\t\tGlass Purple\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-green-600 dark:text-green-400\">\n\t\t\t\t\t\tGlass Green\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-pink-600 dark:text-pink-400\">\n\t\t\t\t\t\tGlass Pink\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Neon Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tNeon Glow Badges\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<NeonBadge color=\"blue\">Neon Blue</NeonBadge>\n\t\t\t\t\t<NeonBadge color=\"purple\">Neon Purple</NeonBadge>\n\t\t\t\t\t<NeonBadge color=\"pink\">Neon Pink</NeonBadge>\n\t\t\t\t\t<NeonBadge color=\"green\">Neon Green</NeonBadge>\n\t\t\t\t\t<NeonBadge color=\"orange\">Neon Orange</NeonBadge>\n\t\t\t\t\t<NeonBadge color=\"red\">Neon Red</NeonBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Gradient Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tGradient Badges\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<GradientBadge gradient=\"blue\">Ocean Blue</GradientBadge>\n\t\t\t\t\t<GradientBadge gradient=\"purple\">Purple Haze</GradientBadge>\n\t\t\t\t\t<GradientBadge gradient=\"green\">Forest Green</GradientBadge>\n\t\t\t\t\t<GradientBadge gradient=\"orange\">Sunset Orange</GradientBadge>\n\t\t\t\t\t<GradientBadge gradient=\"rainbow\">Rainbow</GradientBadge>\n\t\t\t\t\t<GradientBadge gradient=\"sunset\">Sunset</GradientBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Frosted Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tFrosted Glass Badges\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<FrostedBadge className=\"text-gray-700 dark:text-gray-300\">\n\t\t\t\t\t\tFrosted Basic\n\t\t\t\t\t</FrostedBadge>\n\t\t\t\t\t<FrostedBadge className=\"text-blue-600 dark:text-blue-400\">\n\t\t\t\t\t\tFrosted Blue\n\t\t\t\t\t</FrostedBadge>\n\t\t\t\t\t<FrostedBadge className=\"text-purple-600 dark:text-purple-400\">\n\t\t\t\t\t\tFrosted Purple\n\t\t\t\t\t</FrostedBadge>\n\t\t\t\t\t<FrostedBadge className=\"text-green-600 dark:text-green-400\">\n\t\t\t\t\t\tFrosted Green\n\t\t\t\t\t</FrostedBadge>\n\t\t\t\t\t<FrostedBadge className=\"text-pink-600 dark:text-pink-400\">\n\t\t\t\t\t\tFrosted Pink\n\t\t\t\t\t</FrostedBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Holographic Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tHolographic Badges\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<HolographicBadge className=\"text-white\">\n\t\t\t\t\t\tHolographic\n\t\t\t\t\t</HolographicBadge>\n\t\t\t\t\t<HolographicBadge className=\"text-cyan-200\">\n\t\t\t\t\t\tCyber Holo\n\t\t\t\t\t</HolographicBadge>\n\t\t\t\t\t<HolographicBadge className=\"text-purple-200\">\n\t\t\t\t\t\tMagic Holo\n\t\t\t\t\t</HolographicBadge>\n\t\t\t\t\t<HolographicBadge className=\"text-pink-200\">\n\t\t\t\t\t\tDream Holo\n\t\t\t\t\t</HolographicBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Crystal Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tCrystal Badges\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<CrystalBadge className=\"text-gray-700 dark:text-gray-300\">\n\t\t\t\t\t\tCrystal Clear\n\t\t\t\t\t</CrystalBadge>\n\t\t\t\t\t<CrystalBadge className=\"text-blue-600 dark:text-blue-400\">\n\t\t\t\t\t\tIce Crystal\n\t\t\t\t\t</CrystalBadge>\n\t\t\t\t\t<CrystalBadge className=\"text-purple-600 dark:text-purple-400\">\n\t\t\t\t\t\tAmethyst\n\t\t\t\t\t</CrystalBadge>\n\t\t\t\t\t<CrystalBadge className=\"text-green-600 dark:text-green-400\">\n\t\t\t\t\t\tEmerald\n\t\t\t\t\t</CrystalBadge>\n\t\t\t\t\t<CrystalBadge className=\"text-pink-600 dark:text-pink-400\">\n\t\t\t\t\t\tRose Quartz\n\t\t\t\t\t</CrystalBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Icon Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tIcon Badges with Glass Effects\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<GlassBadge className=\"text-yellow-600 dark:text-yellow-400\">\n\t\t\t\t\t\t<StarIcon />\n\t\t\t\t\t\t<span className=\"ml-1\">Premium</span>\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-red-600 dark:text-red-400\">\n\t\t\t\t\t\t<HeartIcon />\n\t\t\t\t\t\t<span className=\"ml-1\">Favorite</span>\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-green-600 dark:text-green-400\">\n\t\t\t\t\t\t<ShieldIcon />\n\t\t\t\t\t\t<span className=\"ml-1\">Verified</span>\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-blue-600 dark:text-blue-400\">\n\t\t\t\t\t\t<TrendingUpIcon />\n\t\t\t\t\t\t<span className=\"ml-1\">Trending</span>\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-purple-600 dark:text-purple-400\">\n\t\t\t\t\t\t<ZapIcon />\n\t\t\t\t\t\t<span className=\"ml-1\">Fast</span>\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"text-orange-600 dark:text-orange-400\">\n\t\t\t\t\t\t<CrownIcon />\n\t\t\t\t\t\t<span className=\"ml-1\">VIP</span>\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Metallic Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tMetallic & Luxury Badges\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<MetallicBadge>Silver</MetallicBadge>\n\t\t\t\t\t<GoldBadge>Gold Premium</GoldBadge>\n\t\t\t\t\t<MetallicBadge className=\"bg-gradient-to-r from-rose-400 via-pink-300 to-rose-400 text-rose-900\">\n\t\t\t\t\t\tRose Gold\n\t\t\t\t\t</MetallicBadge>\n\t\t\t\t\t<MetallicBadge className=\"bg-gradient-to-r from-purple-400 via-purple-300 to-purple-400 text-purple-900\">\n\t\t\t\t\t\tPlatinum\n\t\t\t\t\t</MetallicBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Size Variations with Glass Effects */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tSize Variations with Glass Effects\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3 items-center\">\n\t\t\t\t\t<GlassBadge className=\"px-2 py-0.5 text-xs\">Extra Small</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"px-2.5 py-1 text-sm\">Small</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"px-3 py-1.5 text-sm\">Medium</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"px-4 py-2 text-base\">Large</GlassBadge>\n\t\t\t\t\t<GlassBadge className=\"px-5 py-2.5 text-lg\">Extra Large</GlassBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Interactive Badges */}\n\t\t\t<div className=\"space-y-4\">\n\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n\t\t\t\t\tInteractive Glass Badges\n\t\t\t\t</h3>\n\t\t\t\t<div className=\"flex flex-wrap gap-3\">\n\t\t\t\t\t<GlassBadge\n\t\t\t\t\t\tclassName=\"cursor-pointer hover:bg-white/30 dark:hover:bg-black/30 active:scale-95\"\n\t\t\t\t\t\tonClick={() => alert(\"Glass badge clicked!\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tClickable Glass\n\t\t\t\t\t</GlassBadge>\n\t\t\t\t\t<FrostedBadge\n\t\t\t\t\t\tclassName=\"cursor-pointer hover:bg-white/20 dark:hover:bg-white/15 active:scale-95\"\n\t\t\t\t\t\tonClick={() => alert(\"Frosted badge clicked!\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tClickable Frosted\n\t\t\t\t\t</FrostedBadge>\n\t\t\t\t\t<CrystalBadge\n\t\t\t\t\t\tclassName=\"cursor-pointer hover:rotate-3 active:scale-95\"\n\t\t\t\t\t\tonClick={() => alert(\"Crystal badge clicked!\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tClickable Crystal\n\t\t\t\t\t</CrystalBadge>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "badge.tsx",
      "content": "\"use client\";\nimport {\n\ttype AnchorHTMLAttributes,\n\ttype ButtonHTMLAttributes,\n\ttype CSSProperties,\n\tcloneElement,\n\ttype FocusEvent,\n\tforwardRef,\n\ttype HTMLAttributes,\n\ttype MouseEvent,\n\ttype ReactElement,\n\ttype ReactNode,\n\ttype Ref,\n\tuseState,\n} from \"react\";\n\n// Enhanced Icons\nconst XIcon = ({ className = \"w-4 h-4\" }: { className?: string }) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t\tclassName={className}\n\t>\n\t\t<line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n\t\t<line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n\t</svg>\n);\n\nconst LoadingIcon = ({ className = \"w-4 h-4\" }: { className?: string }) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t\tclassName={`${className} animate-spin`}\n\t>\n\t\t<path d=\"M21 12a9 9 0 11-6.219-8.56\" />\n\t</svg>\n);\n\n// Enhanced Types\ntype BadgeSize = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\";\ntype BadgeShape = \"rounded\" | \"pill\" | \"square\" | \"circle\";\ntype BadgeAnimation =\n\t| \"none\"\n\t| \"pulse\"\n\t| \"bounce\"\n\t| \"float\"\n\t| \"glow\"\n\t| \"shake\"\n\t| \"rotate\"\n\t| \"scale\"\n\t| \"gradient-shift\";\ntype BadgePosition = \"static\" | \"absolute\" | \"fixed\" | \"sticky\";\n\n// Enhanced Badge Props Interface\ninterface BadgeBaseProps {\n\tchildren: ReactNode;\n\tsize?: BadgeSize;\n\tshape?: BadgeShape;\n\tanimation?: BadgeAnimation;\n\tposition?: BadgePosition;\n\n\t// Icons and Content\n\ticonLeft?: ReactElement;\n\ticonRight?: ReactElement;\n\tbadge?: string | number;\n\tloading?: boolean;\n\n\t// Styling\n\tclassName?: string;\n\tstyle?: CSSProperties;\n\n\t// Glass/Blur Effects\n\tblur?: \"none\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\";\n\topacity?: number;\n\n\t// Shadow and Glow\n\tshadow?: \"none\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"inner\";\n\tglow?: boolean;\n\n\t// Animation Options\n\tanimationDuration?: \"fast\" | \"normal\" | \"slow\";\n\n\t// Interactive States\n\tdisabled?: boolean;\n\tactive?: boolean;\n\n\t// Events\n\tonDismiss?: (event: MouseEvent<HTMLButtonElement>) => void;\n\tonHover?: (event: MouseEvent<HTMLElement>) => void;\n\tonFocus?: (event: FocusEvent<HTMLElement>) => void;\n\n\t// Accessibility\n\t\"aria-label\"?: string;\n\t\"aria-describedby\"?: string;\n\trole?: string;\n\n\ttop?: string | number;\n\tright?: string | number;\n\tbottom?: string | number;\n\tleft?: string | number;\n\tzIndex?: number;\n}\n\ntype BadgeActionProps =\n\t| ({\n\t\t\tonClick: (event: MouseEvent<HTMLButtonElement>) => void;\n\t\t\thref?: never;\n\t  } & Omit<ButtonHTMLAttributes<HTMLButtonElement>, \"onClick\">)\n\t| ({ href: string; onClick?: never } & Omit<\n\t\t\tAnchorHTMLAttributes<HTMLAnchorElement>,\n\t\t\t\"href\"\n\t  >)\n\t| ({\n\t\t\thref?: undefined;\n\t\t\tonClick?: undefined;\n\t  } & HTMLAttributes<HTMLDivElement>);\n\nexport type BadgeProps = BadgeBaseProps & BadgeActionProps;\n\nexport const Badge = forwardRef<HTMLElement, BadgeProps>(\n\t(\n\t\t{\n\t\t\tchildren,\n\t\t\tsize = \"md\",\n\t\t\tshape = \"rounded\",\n\t\t\tanimation = \"none\",\n\t\t\tposition = \"static\",\n\t\t\ticonLeft,\n\t\t\ticonRight,\n\t\t\tbadge,\n\t\t\tloading = false,\n\t\t\tclassName = \"\",\n\t\t\tstyle = {},\n\t\t\tblur = \"none\",\n\t\t\topacity,\n\t\t\tshadow = \"none\",\n\t\t\tglow = false,\n\t\t\tanimationDuration = \"normal\",\n\t\t\tdisabled = false,\n\t\t\tactive = false,\n\t\t\tonDismiss,\n\t\t\tonHover,\n\t\t\tonFocus,\n\t\t\tonClick,\n\t\t\thref,\n\t\t\ttop,\n\t\t\tright,\n\t\t\tbottom,\n\t\t\tleft,\n\t\t\tzIndex,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst [isDismissed, setIsDismissed] = useState(false);\n\n\t\t// Handle dismiss functionality\n\t\tconst handleDismiss = (event: MouseEvent<HTMLButtonElement>) => {\n\t\t\tevent.stopPropagation();\n\t\t\tsetIsDismissed(true);\n\t\t\tonDismiss?.(event);\n\t\t};\n\n\t\t// Don't render if dismissed\n\t\tif (isDismissed) return null;\n\n\t\t// Enhanced Size Styles\n\t\tconst sizeStyles: Record<BadgeSize, string> = {\n\t\t\txs: \"px-1.5 py-0.5 text-xs\",\n\t\t\tsm: \"px-2.5 py-0.5 text-xs\",\n\t\t\tmd: \"px-3 py-1.5 text-sm\",\n\t\t\tlg: \"px-4 py-2 text-base\",\n\t\t\txl: \"px-5 py-2.5 text-lg\",\n\t\t\t\"2xl\": \"px-6 py-3 text-xl\",\n\t\t};\n\n\t\t// Enhanced Icon Sizes\n\t\tconst iconSizeStyles: Record<BadgeSize, string> = {\n\t\t\txs: \"w-3 h-3\",\n\t\t\tsm: \"w-3.5 h-3.5\",\n\t\t\tmd: \"w-4 h-4\",\n\t\t\tlg: \"w-5 h-5\",\n\t\t\txl: \"w-6 h-6\",\n\t\t\t\"2xl\": \"w-7 h-7\",\n\t\t};\n\n\t\t// Shape Styles\n\t\tconst shapeStyles: Record<BadgeShape, string> = {\n\t\t\trounded: \"rounded-full\",\n\t\t\tpill: \"rounded-full\",\n\t\t\tsquare: \"rounded-md\",\n\t\t\tcircle: \"rounded-full aspect-square\",\n\t\t};\n\n\t\t// Animation Styles\n\t\tconst animationStyles: Record<BadgeAnimation, string> = {\n\t\t\tnone: \"\",\n\t\t\tpulse: \"animate-pulse\",\n\t\t\tbounce: \"animate-bounce\",\n\t\t\tfloat: \"animate-float\",\n\t\t\tglow: \"animate-glow\",\n\t\t\tshake: \"animate-shake\",\n\t\t\trotate: \"animate-spin\",\n\t\t\tscale: \"hover:scale-110 transition-transform\",\n\t\t\t\"gradient-shift\": \"animate-gradient-x\",\n\t\t};\n\n\t\t// Animation Duration Styles\n\t\tconst durationStyles: Record<string, string> = {\n\t\t\tfast: \"duration-150\",\n\t\t\tnormal: \"duration-300\",\n\t\t\tslow: \"duration-500\",\n\t\t};\n\n\t\t// Shadow Styles\n\t\tconst shadowStyles: Record<string, string> = {\n\t\t\tnone: \"\",\n\t\t\tsm: \"shadow-sm\",\n\t\t\tmd: \"shadow-md\",\n\t\t\tlg: \"shadow-lg\",\n\t\t\txl: \"shadow-xl\",\n\t\t\t\"2xl\": \"shadow-2xl\",\n\t\t\tinner: \"shadow-inner\",\n\t\t};\n\n\t\t// Blur Styles\n\t\tconst blurStyles: Record<string, string> = {\n\t\t\tnone: \"\",\n\t\t\tsm: \"backdrop-blur-sm\",\n\t\t\tmd: \"backdrop-blur-md\",\n\t\t\tlg: \"backdrop-blur-lg\",\n\t\t\txl: \"backdrop-blur-xl\",\n\t\t\t\"2xl\": \"backdrop-blur-2xl\",\n\t\t\t\"3xl\": \"backdrop-blur-3xl\",\n\t\t};\n\n\t\t// Position Styles\n\t\tconst positionStyles: Record<BadgePosition, string> = {\n\t\t\tstatic: \"static\",\n\t\t\tabsolute: \"absolute\",\n\t\t\tfixed: \"fixed\",\n\t\t\tsticky: \"sticky\",\n\t\t};\n\n\t\t// Get icon size based on badge size\n\t\tconst iconSize = iconSizeStyles[size];\n\n\t\tconst baseClasses = [\n\t\t\t\"inline-flex items-center justify-center font-medium transition-all duration-200\",\n\t\t\t\"focus:outline-none focus:ring-2 focus:ring-offset-2\",\n\t\t\tsizeStyles[size],\n\t\t\tshapeStyles[shape],\n\t\t\tanimationStyles[animation],\n\t\t\tdurationStyles[animationDuration],\n\t\t\tshadowStyles[shadow],\n\t\t\tblurStyles[blur],\n\t\t\tpositionStyles[position],\n\t\t\t!className\n\t\t\t\t? \"bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200\"\n\t\t\t\t: \"\",\n\t\t\tdisabled ? \"opacity-50 cursor-not-allowed\" : \"\",\n\t\t\tactive ? \"ring-2 ring-offset-2\" : \"\",\n\t\t\tglow ? \"shadow-lg\" : \"\",\n\t\t\tloading ? \"cursor-wait\" : \"\",\n\t\t\tclassName,\n\t\t]\n\t\t\t.filter(Boolean)\n\t\t\t.join(\" \");\n\n\t\t// Add positioning styles if needed\n\t\tconst positioningStyles: CSSProperties = {\n\t\t\t...style,\n\t\t\t...(top !== undefined && { top }),\n\t\t\t...(right !== undefined && { right }),\n\t\t\t...(bottom !== undefined && { bottom }),\n\t\t\t...(left !== undefined && { left }),\n\t\t\t...(zIndex !== undefined && { zIndex }),\n\t\t\t...(opacity !== undefined && { opacity }),\n\t\t};\n\n\t\tconst finalClassName = baseClasses;\n\t\tconst finalStyle = positioningStyles;\n\n\t\t// Render different components based on props\n\t\tif (href) {\n\t\t\treturn (\n\t\t\t\t<a\n\t\t\t\t\tref={ref as Ref<HTMLAnchorElement>}\n\t\t\t\t\thref={href}\n\t\t\t\t\tclassName={finalClassName}\n\t\t\t\t\tstyle={finalStyle}\n\t\t\t\t\tonMouseEnter={onHover}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\t{...(props as AnchorHTMLAttributes<HTMLAnchorElement>)}\n\t\t\t\t>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<LoadingIcon className={iconSize} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\ticonLeft && (\n\t\t\t\t\t\t\t<span className=\"mr-1.5\">\n\t\t\t\t\t\t\t\t{cloneElement(iconLeft, {\n\t\t\t\t\t\t\t\t\tclassName: iconSize,\n\t\t\t\t\t\t\t\t} as HTMLAttributes<HTMLElement>)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t\t<span className=\"truncate\">{children}</span>\n\t\t\t\t\t{!loading && iconRight && (\n\t\t\t\t\t\t<span className=\"ml-1.5\">\n\t\t\t\t\t\t\t{cloneElement(iconRight, {\n\t\t\t\t\t\t\t\tclassName: iconSize,\n\t\t\t\t\t\t\t} as HTMLAttributes<HTMLElement>)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{badge && (\n\t\t\t\t\t\t<span className=\"ml-1.5 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold leading-none text-white bg-red-500 rounded-full\">\n\t\t\t\t\t\t\t{badge}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{onDismiss && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\taria-label=\"Dismiss\"\n\t\t\t\t\t\t\tonClick={handleDismiss}\n\t\t\t\t\t\t\tclassName=\"ml-1.5 -mr-1 flex-shrink-0 rounded-full p-0.5 hover:bg-black/10 focus:outline-none\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<XIcon className={iconSize} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</a>\n\t\t\t);\n\t\t}\n\n\t\tif (onClick) {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tref={ref as Ref<HTMLButtonElement>}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\tclassName={finalClassName}\n\t\t\t\t\tstyle={finalStyle}\n\t\t\t\t\tonMouseEnter={onHover}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\tdisabled={disabled || loading}\n\t\t\t\t\t{...(props as ButtonHTMLAttributes<HTMLButtonElement>)}\n\t\t\t\t>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<LoadingIcon className={iconSize} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\ticonLeft && (\n\t\t\t\t\t\t\t<span className=\"mr-1.5\">\n\t\t\t\t\t\t\t\t{cloneElement(iconLeft, {\n\t\t\t\t\t\t\t\t\tclassName: iconSize,\n\t\t\t\t\t\t\t\t} as HTMLAttributes<HTMLElement>)}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t\t<span className=\"truncate\">{children}</span>\n\t\t\t\t\t{!loading && iconRight && (\n\t\t\t\t\t\t<span className=\"ml-1.5\">\n\t\t\t\t\t\t\t{cloneElement(iconRight, {\n\t\t\t\t\t\t\t\tclassName: iconSize,\n\t\t\t\t\t\t\t} as HTMLAttributes<HTMLElement>)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{badge && (\n\t\t\t\t\t\t<span className=\"ml-1.5 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold leading-none text-white bg-red-500 rounded-full\">\n\t\t\t\t\t\t\t{badge}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{onDismiss && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\taria-label=\"Dismiss\"\n\t\t\t\t\t\t\tonClick={handleDismiss}\n\t\t\t\t\t\t\tclassName=\"ml-1.5 -mr-1 flex-shrink-0 rounded-full p-0.5 hover:bg-black/10 focus:outline-none\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<XIcon className={iconSize} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</button>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ref as Ref<HTMLDivElement>}\n\t\t\t\tclassName={finalClassName}\n\t\t\t\tstyle={finalStyle}\n\t\t\t\tonMouseEnter={onHover}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\t{...(props as HTMLAttributes<HTMLDivElement>)}\n\t\t\t>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<LoadingIcon className={iconSize} />\n\t\t\t\t) : (\n\t\t\t\t\ticonLeft && (\n\t\t\t\t\t\t<span className=\"mr-1.5\">\n\t\t\t\t\t\t\t{cloneElement(iconLeft, {\n\t\t\t\t\t\t\t\tclassName: iconSize,\n\t\t\t\t\t\t\t} as HTMLAttributes<HTMLElement>)}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t\t<span className=\"truncate\">{children}</span>\n\t\t\t\t{!loading && iconRight && (\n\t\t\t\t\t<span className=\"ml-1.5\">\n\t\t\t\t\t\t{cloneElement(iconRight, {\n\t\t\t\t\t\t\tclassName: iconSize,\n\t\t\t\t\t\t} as HTMLAttributes<HTMLElement>)}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t\t{badge && (\n\t\t\t\t\t<span className=\"ml-1.5 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold leading-none text-white bg-red-500 rounded-full\">\n\t\t\t\t\t\t{badge}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t\t{onDismiss && (\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\taria-label=\"Dismiss\"\n\t\t\t\t\t\tonClick={handleDismiss}\n\t\t\t\t\t\tclassName=\"ml-1.5 -mr-1 flex-shrink-0 rounded-full p-0.5 hover:bg-black/10 focus:outline-none\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<XIcon className={iconSize} />\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t},\n);\n\nBadge.displayName = \"Badge\";\n",
      "type": "registry:ui"
    }
  ]
}