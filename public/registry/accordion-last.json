{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion-last",
  "title": "Accordion Last",
  "description": "A minimalistic accordion component with last item styling designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "accordion-last.tsx",
      "content": "\"use client\";\nimport React, { useState } from \"react\";\n\n// --- Types ---\ninterface AccordionItem {\n  question: string;\n  answer: string;\n}\n\ninterface AccordionIconProps {\n  isOpen: boolean;\n}\n\ninterface AccordionItemProps {\n  item: AccordionItem;\n  isOpen: boolean;\n  onClick: () => void;\n}\n\nconst accordionData: AccordionItem[] = [\n  {\n    question: \"What is React?\",\n    answer:\n      \"React is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies.\",\n  },\n  {\n    question: \"What is Tailwind CSS?\",\n    answer:\n      \"Tailwind CSS is a utility-first CSS framework packed with classes like flex, pt-4, text-center and rotate-90 that can be composed to build any design, directly in your markup.\",\n  },\n  {\n    question: \"How do they work together?\",\n    answer:\n      \"React components can be styled using Tailwind classes directly in the JSX, which allows for rapid development and easy maintenance of a consistent design system.\",\n  },\n  {\n    question: \"Is this accordion accessible?\",\n    answer:\n      \"Yes, basic accessibility is included. The question is a button for proper semantics and keyboard navigation. For more advanced use cases, you could add more ARIA attributes.\",\n  },\n];\n\nconst AccordionIcon: React.FC<AccordionIconProps> = ({ isOpen }) => (\n  <svg\n    className={`w-6 h-6 text-zinc-500 dark:text-zinc-400 transition-transform duration-300 ${isOpen ? \"rotate-180\" : \"\"}`}\n    fill=\"none\"\n    stroke=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M19 9l-7 7-7-7\"\n    />\n  </svg>\n);\n\nconst AccordionItem: React.FC<AccordionItemProps> = ({\n  item,\n  isOpen,\n  onClick,\n}) => {\n  return (\n    <div className=\"border-b border-zinc-200 dark:border-zinc-700 last:border-b-0\">\n      {/* Header part of the accordion item (Question and Icon) */}\n      <button\n        className=\"w-full flex justify-between items-center text-left py-4 px-5 focus:outline-none focus-visible:ring focus-visible:ring-blue-500 dark:focus-visible:ring-blue-400 focus-visible:ring-opacity-75 hover:bg-zinc-50 dark:hover:bg-zinc-800/50 transition-colors duration-200\"\n        onClick={onClick}\n        aria-expanded={isOpen}\n      >\n        <span className=\"text-lg font-medium text-zinc-900 dark:text-zinc-100\">\n          {item.question}\n        </span>\n        <AccordionIcon isOpen={isOpen} />\n      </button>\n\n      <div\n        className={`overflow-hidden transition-all duration-300 ease-in-out ${\n          isOpen ? \"max-h-screen\" : \"max-h-0\"\n        }`}\n      >\n        <div className=\"p-5 pt-0 text-zinc-600 dark:text-zinc-300\">\n          <p>{item.answer}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AccordionLast: React.FC = () => {\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n\n  const handleItemClick = (index: number) => {\n    setOpenIndex(openIndex === index ? null : index);\n  };\n\n  return (\n    <div className=\"flex items-center justify-center p-4 bg-zinc-50 dark:bg-zinc-950 \">\n      <div className=\"w-full max-w-2xl mx-auto bg-white dark:bg-zinc-900 rounded-2xl shadow-lg dark:shadow-zinc-900/20 border border-zinc-200 dark:border-zinc-800 overflow-hidden\">\n        <div className=\"p-6\">\n          <h1 className=\"text-2xl font-bold text-center text-zinc-900 dark:text-zinc-100 mb-1\">\n            Frequently Asked Questions\n          </h1>\n          <p className=\"text-center text-zinc-500 dark:text-zinc-400 mb-6\">\n            Here are some of our most asked questions.\n          </p>\n        </div>\n        {accordionData.map((item, index) => (\n          <AccordionItem\n            key={index}\n            item={item}\n            isOpen={openIndex === index}\n            onClick={() => handleItemClick(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AccordionLast;\n",
      "type": "registry:ui"
    }
  ]
}