{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion",
  "title": "Accordion",
  "description": "A minimalistic accordion component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "accordion.tsx",
      "content": "import Accordion from \"./accordion\";\n\n// --- Data for the Accordion ---\nconst faqData = [\n\t{\n\t\ttitle: \"What are the key features of React?\",\n\t\tcontent:\n\t\t\t\"React's key features include its component-based architecture, virtual DOM for performance, JSX for templating, and one-way data flow. It can also be rendered on the server side, making it flexible for various use cases.\",\n\t},\n\t{\n\t\ttitle: \"How does Tailwind CSS improve development speed?\",\n\t\tcontent:\n\t\t\t\"Tailwind CSS accelerates development by providing a vast library of utility classes that can be applied directly in your HTML. This eliminates the need to write custom CSS for most styling, allowing for rapid prototyping and consistent design.\",\n\t},\n\t{\n\t\ttitle: \"What are best practices for accessibility (a11y)?\",\n\t\tcontent:\n\t\t\t\"Best practices for accessibility include using semantic HTML (e.g., <button>, <nav>), providing text alternatives for images (alt text), ensuring sufficient color contrast, enabling keyboard navigation, and using ARIA roles and attributes where necessary.\",\n\t},\n\t{\n\t\ttitle: \"How do you manage state in a complex React application?\",\n\t\tcontent:\n\t\t\t\"For complex applications, state can be managed using built-in hooks like `useReducer` and `useContext` for medium-sized apps, or dedicated state management libraries like Redux, Zustand, or MobX for larger, more intricate state requirements.\",\n\t},\n];\n\n// --- The Page Component ---\nexport default function AccordionPage() {\n\treturn (\n\t\t<div className=\"flex flex-col items-center justify-center font-sans p-4 transition-colors duration-500\">\n\t\t\t<div className=\"w-full max-w-2xl mx-auto\">\n\t\t\t\t<h1 className=\"text-4xl font-bold text-gray-900 dark:text-slate-100 text-center mb-2\">\n\t\t\t\t\tModern Accordion\n\t\t\t\t</h1>\n\t\t\t\t<p className=\"text-gray-600 dark:text-slate-400 text-center mb-10\">\n\t\t\t\t\tA production-ready, accessible, and stylish accordion component.\n\t\t\t\t</p>\n\n\t\t\t\t{/* Here we use the reusable component with our data */}\n\t\t\t\t<Accordion items={faqData} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    },
    {
      "path": "accordion.tsx",
      "content": "\"use client\";\nimport React, { memo, useCallback, useMemo, useState } from \"react\";\n\ninterface AccordionItemData {\n\ttitle: string;\n\tcontent: string;\n}\n\ninterface AccordionProps {\n\titems: AccordionItemData[];\n}\n\ninterface AccordionItemProps {\n\ttitle: string;\n\tcontent: string;\n\tisOpen: boolean;\n\tonClick: () => void;\n\tisLast: boolean;\n}\n\nconst AccordionItem = memo(function AccordionItem({\n\ttitle,\n\tcontent,\n\tisOpen,\n\tonClick,\n\tisLast,\n}: AccordionItemProps) {\n\tconst uniqueId = useMemo(() => title.replace(/\\s+/g, \"-\"), [title]);\n\n\tconst containerClasses = useMemo(\n\t\t() => (!isLast ? \"border-b border-gray-200 dark:border-slate-700\" : \"\"),\n\t\t[isLast],\n\t);\n\n\tconst buttonClasses = useMemo(\n\t\t() =>\n\t\t\t\"w-full flex justify-between items-center p-5 text-left text-lg font-medium text-gray-800 dark:text-slate-200 hover:bg-gray-100 dark:hover:bg-slate-700/50 focus:outline-none focus-visible:ring focus-visible:ring-indigo-500 focus-visible:ring-opacity-75 transition-colors duration-300\",\n\t\t[],\n\t);\n\n\tconst iconClasses = useMemo(\n\t\t() =>\n\t\t\t`w-5 h-5 text-gray-500 dark:text-slate-400 transition-transform duration-300 ${isOpen ? \"rotate-45\" : \"\"}`,\n\t\t[isOpen],\n\t);\n\n\tconst contentClasses = useMemo(\n\t\t() =>\n\t\t\t`grid overflow-hidden transition-all duration-500 ease-in-out ${isOpen ? \"grid-rows-[1fr] opacity-100\" : \"grid-rows-[0fr] opacity-0\"}`,\n\t\t[isOpen],\n\t);\n\n\treturn (\n\t\t<div className={containerClasses}>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName={buttonClasses}\n\t\t\t\tonClick={onClick}\n\t\t\t\taria-expanded={isOpen}\n\t\t\t\taria-controls={`accordion-content-${uniqueId}`}\n\t\t\t\tid={`accordion-header-${uniqueId}`}\n\t\t\t>\n\t\t\t\t<span>{title}</span>\n\t\t\t\t<div className=\"w-6 h-6 flex-shrink-0 flex items-center justify-center\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\tclassName={iconClasses}\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\td=\"M12 4.5v15m7.5-7.5h-15\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</button>\n\n\t\t\t<div\n\t\t\t\tid={`accordion-content-${uniqueId}`}\n\t\t\t\trole=\"region\"\n\t\t\t\taria-labelledby={`accordion-header-${uniqueId}`}\n\t\t\t\tclassName={contentClasses}\n\t\t\t>\n\t\t\t\t<div className=\"overflow-hidden\">\n\t\t\t\t\t<div className=\"p-5 pt-2 text-gray-600 dark:text-slate-400\">\n\t\t\t\t\t\t<p>{content}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n});\n\nexport default function Accordion({ items }: AccordionProps) {\n\tconst [openIndex, setOpenIndex] = useState<number | null>(null);\n\n\tconst handleClick = useCallback((index: number) => {\n\t\tsetOpenIndex((prevIndex) => (prevIndex === index ? null : index));\n\t}, []);\n\n\tconst containerClasses = useMemo(\n\t\t() =>\n\t\t\t\"rounded-xl shadow-lg bg-gray-50 dark:bg-slate-800/60 border border-gray-200 dark:border-slate-700 backdrop-blur-sm\",\n\t\t[],\n\t);\n\n\treturn (\n\t\t<div className={containerClasses}>\n\t\t\t{items.map((item, index) => (\n\t\t\t\t<AccordionItem\n\t\t\t\t\tkey={`${item.title}-${index}`}\n\t\t\t\t\ttitle={item.title}\n\t\t\t\t\tcontent={item.content}\n\t\t\t\t\tisOpen={openIndex === index}\n\t\t\t\t\tonClick={() => handleClick(index)}\n\t\t\t\t\tisLast={index === items.length - 1}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    },
    {
      "path": "accordion2.tsx",
      "content": "\"use client\";\n\nimport {\n\tAlertCircle,\n\tBookOpen,\n\tBriefcase,\n\tChevronDown,\n\tMail,\n\tMonitorPlay,\n\tShieldCheck,\n\tShuffle,\n\tWallet,\n} from \"lucide-react\";\nimport type React from \"react\";\nimport { useState } from \"react\";\n\n// Data for the FAQ section, including icons\nconst faqData = [\n\t{\n\t\ticon: <Briefcase size={20} className=\"text-gray-500 dark:text-gray-400\" />,\n\t\tquestion: \"How do I create an account?\",\n\t\tanswer:\n\t\t\t'To create an account, simply click the \"Sign Up\" button at the top-right corner of the page and fill in your details. It only takes a minute!',\n\t},\n\t{\n\t\ticon: <Shuffle size={20} className=\"text-gray-500 dark:text-gray-400\" />,\n\t\tquestion: \"Can I change my subscription plan?\",\n\t\tanswer:\n\t\t\t\"Yes, you can upgrade or downgrade your subscription plan at any time from your account settings. Changes will be prorated.\",\n\t},\n\t{\n\t\ticon: (\n\t\t\t<AlertCircle size={20} className=\"text-gray-500 dark:text-gray-400\" />\n\t\t),\n\t\tquestion: \"What happens if I forget my password?\",\n\t\tanswer:\n\t\t\t\"Don't worry! You can easily reset your password by clicking the 'Forgot Password' link on the login page. We'll send a reset link to your email.\",\n\t},\n\t{\n\t\ticon: <BookOpen size={20} className=\"text-gray-500 dark:text-gray-400\" />,\n\t\tquestion: \"Where can I find the user guides?\",\n\t\tanswer:\n\t\t\t'All our user guides and documentation are available in the \"Help\" section of our website. You can also search for specific topics.',\n\t},\n\t{\n\t\ticon: <Wallet size={20} className=\"text-gray-500 dark:text-gray-400\" />,\n\t\tquestion: \"What payment methods do you accept?\",\n\t\tanswer:\n\t\t\t\"We accept all major credit cards, including Visa, MasterCard, and American Express. We also support payments via PayPal.\",\n\t},\n\t{\n\t\ticon: <Mail size={20} className=\"text-gray-500 dark:text-gray-400\" />,\n\t\tquestion: \"How can I contact customer support?\",\n\t\tanswer:\n\t\t\t\"Our support team is available 24/7. You can reach us via the contact form on our website, by email at support@example.com, or through live chat.\",\n\t},\n\t{\n\t\ticon: (\n\t\t\t<ShieldCheck size={20} className=\"text-gray-500 dark:text-gray-400\" />\n\t\t),\n\t\tquestion: \"Is my personal data secure?\",\n\t\tanswer:\n\t\t\t\"Absolutely. We prioritize your privacy and security. We use state-of-the-art encryption and security protocols to protect all your data.\",\n\t},\n\t{\n\t\ticon: (\n\t\t\t<MonitorPlay size={20} className=\"text-gray-500 dark:text-gray-400\" />\n\t\t),\n\t\tquestion: \"Do you have video tutorials?\",\n\t\tanswer:\n\t\t\t'Yes, we have a library of video tutorials that cover all the main features of our platform. You can find them on our YouTube channel and in the \"Tutorials\" section.',\n\t},\n];\n\ninterface AccordionItemProps {\n\titem: {\n\t\ticon: React.ReactNode;\n\t\tquestion: string;\n\t\tanswer: string;\n\t};\n\tisOpen: boolean;\n\tonToggle: () => void;\n}\n\nconst AccordionItem: React.FC<AccordionItemProps> = ({\n\titem,\n\tisOpen,\n\tonToggle,\n}) => {\n\treturn (\n\t\t<div className=\"border-b border-gray-200 dark:border-gray-700 last:border-b-0\">\n\t\t\t<button\n\t\t\t\tclassName=\"flex items-center justify-between w-full p-4 text-left focus:outline-none hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors\"\n\t\t\t\tonClick={onToggle}\n\t\t\t>\n\t\t\t\t<div className=\"flex items-center space-x-4\">\n\t\t\t\t\t{item.icon}\n\t\t\t\t\t<span className=\"text-base font-medium text-gray-800 dark:text-gray-200\">\n\t\t\t\t\t\t{item.question}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<ChevronDown\n\t\t\t\t\tsize={20}\n\t\t\t\t\tclassName={`transform transition-transform duration-300 text-gray-500 dark:text-gray-400 ${isOpen ? \"rotate-180\" : \"\"}`}\n\t\t\t\t/>\n\t\t\t</button>\n\t\t\t<div\n\t\t\t\tclassName={`overflow-hidden transition-all duration-300 ease-in-out ${\n\t\t\t\t\tisOpen ? \"max-h-96\" : \"max-h-0\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t<div className=\"p-4 pl-12\">\n\t\t\t\t\t<p className=\"text-gray-600 dark:text-gray-300\">{item.answer}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default function AccordionSection() {\n\tconst [openIndex, setOpenIndex] = useState<number | null>(2);\n\n\tconst handleToggle = (index: number) => {\n\t\tsetOpenIndex(openIndex === index ? null : index);\n\t};\n\n\treturn (\n\t\t<div className=\"flex items-center justify-center\">\n\t\t\t<div className=\"w-full max-w-2xl mx-auto\">\n\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t<h1 className=\"text-2xl font-bold text-center text-gray-800 dark:text-gray-100 mb-6\">\n\t\t\t\t\t\tGeneral Questions\n\t\t\t\t\t</h1>\n\t\t\t\t\t<div className=\"border border-gray-200 dark:border-gray-700 rounded-lg\">\n\t\t\t\t\t\t{faqData.map((item, index) => (\n\t\t\t\t\t\t\t<AccordionItem\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\tisOpen={openIndex === index}\n\t\t\t\t\t\t\t\tonToggle={() => handleToggle(index)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    },
    {
      "path": "accordionLofi.tsx",
      "content": "import { ChevronDownIcon, ChevronUpIcon } from \"lucide-react\";\n\n// import { Atom } from \"@/components/lo-fi/atom\"\n\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport type * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst atomVariants = cva(\n\t\"inline-flex rounded-lg border-neutral-300 dark:border-neutral-600\",\n\t{\n\t\tvariants: {\n\t\t\tshade: {\n\t\t\t\t\"50\": \"bg-neutral-50 dark:bg-neutral-900\",\n\t\t\t\t\"100\": \"bg-neutral-100 dark:bg-neutral-800\",\n\t\t\t\t\"200\": \"bg-neutral-200 dark:bg-neutral-700\",\n\t\t\t\t\"300\": \"bg-neutral-300 dark:bg-neutral-600\",\n\t\t\t\t\"400\": \"bg-neutral-400 dark:bg-neutral-500\",\n\t\t\t\t\"500\": \"bg-neutral-500 dark:bg-neutral-400\",\n\t\t\t\t\"600\": \"bg-neutral-600 dark:bg-neutral-300\",\n\t\t\t\t\"700\": \"bg-neutral-700 dark:bg-neutral-200\",\n\t\t\t\t\"800\": \"bg-neutral-800 dark:bg-neutral-100\",\n\t\t\t\t\"900\": \"bg-neutral-900 dark:bg-neutral-50\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tshade: \"50\",\n\t\t},\n\t},\n);\n\nfunction Atom({\n\tclassName,\n\tshade,\n\t...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof atomVariants>) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"button\"\n\t\t\tclassName={cn(atomVariants({ shade, className }))}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport { Atom };\n\nexport function AccordionLoFi() {\n\treturn (\n\t\t<div className=\"flex flex-col\">\n\t\t\t<div className=\"flex flex-col gap-1 border-b py-2\">\n\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t<Atom shade=\"300\" className=\"h-2 w-1/3\" />\n\t\t\t\t\t<ChevronDownIcon className=\"size-3\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-col gap-1 border-b py-2\">\n\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t<Atom shade=\"300\" className=\"h-2 w-1/2\" />\n\t\t\t\t\t<ChevronUpIcon className=\"size-3\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-col gap-1.5\">\n\t\t\t\t\t<Atom shade=\"200\" className=\"h-2 w-2/3\" />\n\t\t\t\t\t<Atom shade=\"200\" className=\"h-2 w-1/3\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-col gap-1 py-2\">\n\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t<Atom shade=\"300\" className=\"h-2 w-2/3\" />\n\t\t\t\t\t<ChevronDownIcon className=\"size-3\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    },
    {
      "path": "customAccordion.tsx",
      "content": "\"use client\";\nimport type React from \"react\";\nimport { useState } from \"react\";\n\n// Type definitions\ninterface FAQItem {\n\tquestion: string;\n\tanswer: string;\n}\n\ninterface AccordionItemProps {\n\tquestion: string;\n\tanswer: string;\n\tisOpen: boolean;\n\tonClick: () => void;\n}\n\n// Updated data for the FAQ section\nconst faqData: FAQItem[] = [\n\t{\n\t\tquestion: \"How do I get started?\",\n\t\tanswer:\n\t\t\t\"Getting started is easy! Just follow the simple steps outlined in our comprehensive setup guide, which will walk you through the entire process from beginning to end.\",\n\t},\n\t{\n\t\tquestion: \"Where can I find my account details?\",\n\t\tanswer:\n\t\t\t\"You can find all of your account information, including your profile, settings, and billing history, on the 'My Account' page once you have successfully logged in.\",\n\t},\n\t{\n\t\tquestion: \"How do I reset my password?\",\n\t\tanswer:\n\t\t\t'To reset your password, please click the \"Forgot Password\" link on the login page. We will then send an email with further instructions to your registered email address.',\n\t},\n\t{\n\t\tquestion: \"Who can I contact for support?\",\n\t\tanswer:\n\t\t\t\"Our dedicated support team is available around the clock to assist you. You can reach us through the contact form on our website or by sending an email to support@example.com.\",\n\t},\n];\n\n// AccordionItem component for each FAQ entry\nconst AccordionItem: React.FC<AccordionItemProps> = ({\n\tquestion,\n\tanswer,\n\tisOpen,\n\tonClick,\n}) => {\n\treturn (\n\t\t<div className=\"bg-white/90 dark:bg-black/90 rounded-xl shadow-lg border border-gray-200 dark:border-green-500/60 mb-4 overflow-hidden backdrop-blur-md relative\">\n\t\t\t{/* Subtle gradient overlay */}\n\t\t\t<div className=\"absolute inset-0 bg-gradient-to-br from-gray-50/50 to-white/30 dark:from-green-400/15 dark:to-green-500/10 rounded-xl pointer-events-none\"></div>\n\n\t\t\t<button\n\t\t\t\tclassName=\"w-full flex justify-between items-center text-left p-6 focus:outline-none hover:bg-gray-50 dark:hover:bg-green-800/30 transition-colors duration-200 relative z-10\"\n\t\t\t\tonClick={onClick}\n\t\t\t>\n\t\t\t\t<span className=\"text-lg font-medium text-gray-900 dark:text-green-50\">\n\t\t\t\t\t{question}\n\t\t\t\t</span>\n\t\t\t\t{/* Chevron Icon with a smoother, longer transition */}\n\t\t\t\t<svg\n\t\t\t\t\tclassName={`w-6 h-6 text-gray-600 dark:text-green-300 transform transition-transform duration-500 ease-in-out ${\n\t\t\t\t\t\tisOpen ? \"rotate-180\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\td=\"M19 9l-7 7-7-7\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</button>\n\t\t\t{/* Collapsible content area with a smoother, longer transition */}\n\t\t\t<div\n\t\t\t\tclassName={`overflow-hidden transition-all duration-500 ease-in-out ${\n\t\t\t\t\tisOpen ? \"max-h-96\" : \"max-h-0\"\n\t\t\t\t}`}\n\t\t\t>\n\t\t\t\t{/* Answer text with a fade-in effect for a smoother appearance */}\n\t\t\t\t<div className=\"p-6 pt-0 relative z-10\">\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={`text-gray-700 dark:text-green-100 leading-relaxed transition-opacity duration-300 ease-in-out ${isOpen ? \"opacity-100 delay-200\" : \"opacity-0\"}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t{answer}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n// Main App component that renders the FAQ section\nexport default function CustomAccordion() {\n\tconst [openIndex, setOpenIndex] = useState<number | null>(0); // First item is open by default\n\n\tconst handleItemClick = (index: number) => {\n\t\t// If the clicked item is already open, close it. Otherwise, open it.\n\t\tsetOpenIndex(openIndex === index ? null : index);\n\t};\n\n\treturn (\n\t\t<div className=\"flex items-center justify-center font-sans p-4 rk:bg-black \">\n\t\t\t<div className=\"w-full max-w-2xl mx-auto\">\n\t\t\t\t<div className=\"text-center mb-10\">\n\t\t\t\t\t<span className=\"bg-[#EBF3FB] dark:bg-blue-900/20 text-[#3B82F6] dark:text-blue-400 text-sm font-medium px-4 py-1.5 rounded-full\">\n\t\t\t\t\t\tHelp Center\n\t\t\t\t\t</span>\n\t\t\t\t\t<h1 className=\"text-4xl font-bold text-gray-800 dark:text-white mt-4\">\n\t\t\t\t\t\tCommon Questions\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{faqData.map((faq, index) => (\n\t\t\t\t\t\t<AccordionItem\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tquestion={faq.question}\n\t\t\t\t\t\t\tanswer={faq.answer}\n\t\t\t\t\t\t\tisOpen={openIndex === index}\n\t\t\t\t\t\t\tonClick={() => handleItemClick(index)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}