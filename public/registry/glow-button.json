{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "glow-button",
  "title": "Glow Button",
  "description": "A minimalistic glow button component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "glow-button.tsx",
      "content": "\"use client\";\n\nimport type React from \"react\";\nimport { useEffect, useState } from \"react\";\n\ninterface GlowButtonProps {\n\tchildren: React.ReactNode;\n\tvariant?: \"blue\" | \"pink\" | \"green\";\n}\n\nconst variants = {\n\tblue: {\n\t\tlight: {\n\t\t\touterGlow: \"rgba(59, 130, 246, 0.4)\",\n\t\t\tblobGlow: \"rgba(59, 130, 246, 0.6)\",\n\t\t\tblobHighlight: \"#60a5fa\",\n\t\t\tblobShadow: \"rgba(59, 130, 246, 0.25)\",\n\t\t\tinnerGlow: \"rgba(59, 130, 246, 0.1)\",\n\t\t\tinnerHighlight: \"rgba(147, 197, 253, 0.15)\",\n\t\t\touterBg: \"linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)\",\n\t\t\tinnerBg: \"linear-gradient(135deg, #ffffff 0%, #f1f5f9 100%)\",\n\t\t\ttextColor: \"#1e293b\",\n\t\t},\n\t\tdark: {\n\t\t\touterGlow: \"rgba(255, 255, 255, 0.35)\",\n\t\t\tblobGlow: \"rgba(0, 0, 255, 0.5)\",\n\t\t\tblobHighlight: \"#3fe9ff\",\n\t\t\tblobShadow: \"rgba(0, 81, 255, 0.18)\",\n\t\t\tinnerGlow: \"rgba(0, 0, 255, 0.07)\",\n\t\t\tinnerHighlight: \"rgba(0, 225, 255, 0.1)\",\n\t\t\touterBg: \"radial-gradient(circle 80px at 80% -10%, #ffffff, #181b1b)\",\n\t\t\tinnerBg: \"radial-gradient(circle 80px at 80% -50%, #777777, #0f1111)\",\n\t\t\ttextColor: \"#ffffff\",\n\t\t},\n\t},\n\tpink: {\n\t\tlight: {\n\t\t\touterGlow: \"rgba(236, 72, 153, 0.4)\",\n\t\t\tblobGlow: \"rgba(236, 72, 153, 0.6)\",\n\t\t\tblobHighlight: \"#f472b6\",\n\t\t\tblobShadow: \"rgba(236, 72, 153, 0.25)\",\n\t\t\tinnerGlow: \"rgba(236, 72, 153, 0.1)\",\n\t\t\tinnerHighlight: \"rgba(251, 207, 232, 0.15)\",\n\t\t\touterBg: \"linear-gradient(135deg, #fdf2f8 0%, #fce7f3 100%)\",\n\t\t\tinnerBg: \"linear-gradient(135deg, #ffffff 0%, #fdf2f8 100%)\",\n\t\t\ttextColor: \"#831843\",\n\t\t},\n\t\tdark: {\n\t\t\touterGlow: \"rgba(255, 230, 255, 0.4)\",\n\t\t\tblobGlow: \"rgba(255, 0, 150, 0.5)\",\n\t\t\tblobHighlight: \"#ff66cc\",\n\t\t\tblobShadow: \"rgba(255, 0, 150, 0.18)\",\n\t\t\tinnerGlow: \"rgba(255, 0, 150, 0.07)\",\n\t\t\tinnerHighlight: \"rgba(255, 102, 204, 0.1)\",\n\t\t\touterBg: \"radial-gradient(circle 80px at 80% -10%, #ffffff, #181b1b)\",\n\t\t\tinnerBg: \"radial-gradient(circle 80px at 80% -50%, #777777, #0f1111)\",\n\t\t\ttextColor: \"#ffffff\",\n\t\t},\n\t},\n\tgreen: {\n\t\tlight: {\n\t\t\touterGlow: \"rgba(34, 197, 94, 0.4)\",\n\t\t\tblobGlow: \"rgba(34, 197, 94, 0.6)\",\n\t\t\tblobHighlight: \"#4ade80\",\n\t\t\tblobShadow: \"rgba(34, 197, 94, 0.25)\",\n\t\t\tinnerGlow: \"rgba(34, 197, 94, 0.1)\",\n\t\t\tinnerHighlight: \"rgba(187, 247, 208, 0.15)\",\n\t\t\touterBg: \"linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%)\",\n\t\t\tinnerBg: \"linear-gradient(135deg, #ffffff 0%, #f0fdf4 100%)\",\n\t\t\ttextColor: \"#14532d\",\n\t\t},\n\t\tdark: {\n\t\t\touterGlow: \"rgba(230, 255, 230, 0.4)\",\n\t\t\tblobGlow: \"rgba(0, 255, 100, 0.5)\",\n\t\t\tblobHighlight: \"#adff2f\",\n\t\t\tblobShadow: \"rgba(0, 255, 100, 0.18)\",\n\t\t\tinnerGlow: \"rgba(0, 255, 100, 0.07)\",\n\t\t\tinnerHighlight: \"rgba(173, 255, 47, 0.1)\",\n\t\t\touterBg: \"radial-gradient(circle 80px at 80% -10%, #ffffff, #181b1b)\",\n\t\t\tinnerBg: \"radial-gradient(circle 80px at 80% -50%, #777777, #0f1111)\",\n\t\t\ttextColor: \"#ffffff\",\n\t\t},\n\t},\n};\n\n// Custom hook to detect theme\nconst useTheme = () => {\n\tconst [isDark, setIsDark] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst checkTheme = () => {\n\t\t\tconst isDarkMode =\n\t\t\t\tdocument.documentElement.classList.contains(\"dark\") ||\n\t\t\t\twindow.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\t\t\tsetIsDark(isDarkMode);\n\t\t};\n\n\t\tcheckTheme();\n\n\t\t// Listen for theme changes\n\t\tconst observer = new MutationObserver(checkTheme);\n\t\tobserver.observe(document.documentElement, {\n\t\t\tattributes: true,\n\t\t\tattributeFilter: [\"class\"],\n\t\t});\n\n\t\tconst mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\t\tmediaQuery.addEventListener(\"change\", checkTheme);\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t\tmediaQuery.removeEventListener(\"change\", checkTheme);\n\t\t};\n\t}, []);\n\n\treturn isDark;\n};\n\nconst GlowButton: React.FC<GlowButtonProps> = ({\n\tchildren,\n\tvariant = \"blue\",\n}) => {\n\tconst isDark = useTheme();\n\tconst variantColors = variants[variant] || variants.blue;\n\tconst colors = isDark ? variantColors.dark : variantColors.light;\n\n\treturn (\n\t\t<button\n\t\t\tclassName=\"relative cursor-pointer rounded-2xl border-none p-0.5 transition-transform duration-300 ease-in-out hover:scale-105 active:scale-95\"\n\t\t\tstyle={{\n\t\t\t\tbackground: colors.outerBg,\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"absolute top-0 right-0 h-[60%] w-[65%] rounded-[120px] -z-10\"\n\t\t\t\tstyle={{ boxShadow: `0 0 30px ${colors.outerGlow}` }}\n\t\t\t></div>\n\n\t\t\t<div\n\t\t\t\tclassName=\"absolute bottom-0 left-0 h-full w-[70px] rounded-2xl\"\n\t\t\t\tstyle={{\n\t\t\t\t\tboxShadow: `-10px 10px 30px ${colors.blobShadow}`,\n\t\t\t\t\tbackground: `radial-gradient(circle 60px at 0% 100%, ${colors.blobHighlight}, ${colors.blobGlow}, transparent)`,\n\t\t\t\t}}\n\t\t\t></div>\n\n\t\t\t<div\n\t\t\t\tclassName=\"relative z-20 flex h-11 items-center justify-center overflow-hidden rounded-[14px] px-8\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: colors.innerBg,\n\t\t\t\t\tcolor: colors.textColor,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"absolute top-0 left-0 h-full w-full rounded-[14px]\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: `radial-gradient(circle 60px at 0% 100%, ${colors.innerHighlight}, ${colors.innerGlow}, transparent)`,\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\n\t\t\t\t<span className=\"relative z-10 whitespace-nowrap text-lg font-semibold\">\n\t\t\t\t\t{children}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</button>\n\t);\n};\n\nexport default function SolancnButtonView() {\n\treturn (\n\t\t<div className=\"flex gap-5\">\n\t\t\t<GlowButton variant=\"blue\">Blue Glow</GlowButton>\n\t\t\t<GlowButton variant=\"pink\">Pink Glow</GlowButton>\n\t\t\t<GlowButton variant=\"green\">Green Glow</GlowButton>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:ui"
    }
  ]
}