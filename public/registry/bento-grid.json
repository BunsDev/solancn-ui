{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "bento-grid",
  "title": "Bento Grid",
  "description": "A minimalistic bento grid component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "bento-grid.tsx",
      "content": "\"use client\";\nimport React, {\n  ComponentPropsWithoutRef,\n  ReactNode,\n  FC,\n  SVGProps,\n} from \"react\";\n\nconst cn = (...inputs: (string | boolean | undefined | null)[]) => {\n  return inputs.filter(Boolean).join(\" \");\n};\n\nconst ArrowRightIcon: FC<SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 16 16\"\n    fill=\"currentColor\"\n    {...props}\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M8.22 2.72a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 8.5H3.75a.75.75 0 0 1 0-1.5h8.19L8.22 3.78a.75.75 0 0 1 0-1.06Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\ninterface BentoGridProps extends ComponentPropsWithoutRef<\"div\"> {\n  children: ReactNode;\n  className?: string;\n}\n\nconst BentoGrid: FC<BentoGridProps> = ({ children, className, ...props }) => {\n  return (\n    <div\n      className={cn(\n        \"grid w-full auto-rows-[22rem] grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface BentoCardProps extends ComponentPropsWithoutRef<\"div\"> {\n  name: string;\n  className: string;\n  background: ReactNode;\n  Icon: React.ElementType;\n  description: string;\n  href: string;\n  cta: string;\n}\n\nconst BentoCard: FC<BentoCardProps> = ({\n  name,\n  className,\n  background,\n  Icon,\n  description,\n  href,\n  cta,\n  ...props\n}) => (\n  <div\n    key={name}\n    className={cn(\n      \"group relative flex flex-col justify-between overflow-hidden rounded-xl\",\n\n      \"bg-white [box-shadow:0_0_0_1px_rgba(0,0,0,.03),0_2px_4px_rgba(0,0,0,.05),0_12px_24px_rgba(0,0,0,.05)]\",\n\n      \"transform-gpu dark:bg-black dark:[border:1px_solid_rgba(255,255,255,.1)] dark:[box-shadow:0_-20px_80px_-20px_#ffffff1f_inset]\",\n      className\n    )}\n    {...props}\n  >\n    <div>{background}</div>\n    <div className=\"pointer-events-none z-10 flex transform-gpu flex-col gap-1 p-6 transition-all duration-300 group-hover:-translate-y-10\">\n      <Icon className=\"h-12 w-12 origin-left transform-gpu text-neutral-700 transition-all duration-300 ease-in-out group-hover:scale-75 dark:text-neutral-300\" />\n\n      <h3 className=\"text-xl font-semibold text-neutral-900 dark:text-neutral-100\">\n        {name}\n      </h3>\n\n      <p className=\"max-w-lg text-neutral-500 dark:text-neutral-400\">\n        {description}\n      </p>\n    </div>\n\n    <div\n      className={cn(\n        \"pointer-events-none absolute bottom-0 flex w-full translate-y-10 transform-gpu flex-row items-center p-4 opacity-0 transition-all duration-300 group-hover:translate-y-0 group-hover:opacity-100\"\n      )}\n    >\n      <a\n        href={href}\n        className=\"pointer-events-auto text-sm font-semibold text-blue-500 hover:text-blue-600 dark:text-blue-400 dark:hover:text-blue-500 flex items-center\"\n      >\n        {cta}\n        <ArrowRightIcon className=\"ml-2 h-4 w-4\" />\n      </a>\n    </div>\n\n    <div className=\"pointer-events-none absolute inset-0 transform-gpu transition-all duration-300 group-hover:bg-black/[.03] group-hover:dark:bg-neutral-800/10\" />\n  </div>\n);\n\n// --- Example Usage ---\n\nconst FileTextIcon: FC<SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\" />\n    <polyline points=\"14 2 14 8 20 8\" />\n    <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\" />\n    <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\" />\n    <line x1=\"10\" y1=\"9\" x2=\"8\" y2=\"9\" />\n  </svg>\n);\nconst IntegrationIcon: FC<SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M12 2L2 7l10 5 10-5-10-5z\" />\n    <path d=\"M2 17l10 5 10-5\" />\n    <path d=\"M2 12l10 5 10-5\" />\n  </svg>\n);\nconst ShareIcon: FC<SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\" />\n    <polyline points=\"16 6 12 2 8 6\" />\n    <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\" />\n  </svg>\n);\nconst GlobeIcon: FC<SVGProps<SVGSVGElement>> = (props) => (\n  <svg\n    {...props}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"10\" />\n    <path d=\"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\" />\n    <path d=\"M2 12h20\" />\n  </svg>\n);\n\ntype Feature = {\n  Icon: FC<SVGProps<SVGSVGElement>>;\n  name: string;\n  description: string;\n  href: string;\n  cta: string;\n  className: string;\n  background: ReactNode;\n};\n\nconst features: Feature[] = [\n  {\n    Icon: FileTextIcon,\n    name: \"Automated Reporting\",\n    description: \"Generate and export detailed reports with a single click.\",\n    href: \"#\",\n    cta: \"Learn More\",\n    className: \"lg:col-span-1\",\n    background: (\n      <div className=\"absolute inset-0 bg-amber-50 dark:bg-amber-950/20\" />\n    ),\n  },\n  {\n    Icon: IntegrationIcon,\n    name: \"Seamless Integration\",\n    description: \"Connect with your favorite tools and services effortlessly.\",\n    href: \"#\",\n    cta: \"View Integrations\",\n    className: \"lg:col-span-2\",\n    background: (\n      <div className=\"absolute inset-0 bg-purple-50 dark:bg-purple-950/20\" />\n    ),\n  },\n  {\n    Icon: ShareIcon,\n    name: \"Real-Time Collaboration\",\n    description: \"Work together with your team in real-time on any project.\",\n    href: \"#\",\n    cta: \"Try It Now\",\n    className: \"lg:col-span-2\",\n    background: (\n      <div className=\"absolute inset-0 bg-blue-50 dark:bg-blue-950/20\" />\n    ),\n  },\n  {\n    Icon: GlobeIcon,\n    name: \"Global Reach\",\n    description:\n      \"Deploy your applications anywhere in the world with our robust infrastructure.\",\n    href: \"#\",\n    cta: \"Explore Regions\",\n    className: \"lg:col-span-1\",\n    background: (\n      <div className=\"absolute inset-0 bg-green-50 dark:bg-green-950/20\" />\n    ),\n  },\n];\n\nexport default function BentoGridCom() {\n  return (\n    <div className=\"w-full p-4 sm:p-6 lg:p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <BentoGrid>\n          {features.map((feature, idx) => (\n            <BentoCard key={idx} {...feature} />\n          ))}\n        </BentoGrid>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}