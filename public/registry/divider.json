{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "divider",
  "title": "Divider",
  "description": "A minimalistic divider component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "divider.tsx",
      "content": "\"use client\";\nimport Divider from \"./divider\";\n\nexport default function DividerView() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-8 w-full max-w-full mx-auto p-4\">\n\t\t\t<div className=\"w-full rounded-lg\">\n\t\t\t\t<div className=\"text-sm text-zinc-400 mb-1\">Tickets Sold</div>\n\t\t\t\t<div className=\"text-3xl font-semibold text-white mb-6\">1,587</div>\n\n\t\t\t\t<Divider>\n\t\t\t\t\t<span className=\"text-sm text-zinc-500\">Details</span>\n\t\t\t\t</Divider>\n\n\t\t\t\t<p className=\"text-sm text-zinc-400 mt-6 leading-relaxed\">\n\t\t\t\t\tTicket sales peaked in March, largely due to the{\" \"}\n\t\t\t\t\t<b>&ldquo;March Mountain Madness&rdquo;</b> event on March 12th,\n\t\t\t\t\tdrawing significant tourist interest. Operational efficiencies and\n\t\t\t\t\tlocal hotel partnerships further boosted sales. Additionally, targeted\n\t\t\t\t\tsocial media promotions ahead of the event significantly increased\n\t\t\t\t\tonline bookings.\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{/* Text section divider */}\n\t\t\t<Divider variant=\"dashed\" thickness={2} color=\"gray\">\n\t\t\t\t<span className=\"text-zinc-400 text-sm\">Section Break</span>\n\t\t\t</Divider>\n\n\t\t\t{/* Styled Tremor-style button in divider */}\n\t\t\t<Divider>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"relative inline-flex items-center justify-center whitespace-nowrap border px-3 py-2 text-center text-sm font-medium shadow-xs transition-all duration-100 ease-in-out disabled:pointer-events-none disabled:shadow-none outline-offset-2 outline-0 focus-visible:outline-2 outline-blue-500 dark:outline-blue-500 border-gray-300 dark:border-gray-800 text-gray-900 dark:text-gray-50 bg-white dark:bg-gray-950 hover:bg-gray-50 dark:hover:bg-gray-900/60 disabled:text-gray-400 dark:disabled:text-gray-600 rounded-full\"\n\t\t\t\t\ttremor-id=\"tremor-raw\"\n\t\t\t\t>\n\t\t\t\t\tShow more\n\t\t\t\t</button>\n\t\t\t</Divider>\n\n\t\t\t{/* Icon example */}\n\t\t\t<Divider>\n\t\t\t\t<span className=\"text-sm text-zinc-500 flex items-center gap-1\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tclassName=\"w-4 h-4\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\t\td=\"M13 16h-1v-4h-1m1-4h.01M12 20.5C6.201 20.5 1.5 15.799 1.5 10S6.201-.5 12-.5 22.5 4.701 22.5 10 17.799 20.5 12 20.5z\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t\tInfo line\n\t\t\t\t</span>\n\t\t\t</Divider>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "divider.tsx",
      "content": "\"use client\";\nimport type React from \"react\";\n\ninterface DividerProps extends React.HTMLAttributes<HTMLDivElement> {\n\torientation?: \"horizontal\" | \"vertical\";\n\tdecorative?: boolean;\n\tvariant?: \"solid\" | \"dashed\" | \"dotted\";\n\tthickness?: number;\n\tcolor?: string;\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n}\n\nconst Divider = ({\n\torientation = \"horizontal\",\n\tdecorative = true,\n\tvariant = \"solid\",\n\tthickness = 1,\n\tcolor,\n\tclassName = \"\",\n\tchildren,\n\t...props\n}: DividerProps) => {\n\tconst baseClasses = \"flex items-center\";\n\tconst orientationClasses =\n\t\torientation === \"horizontal\" ? \"w-full my-8\" : \"h-full self-stretch mx-8\";\n\n\tconst variantStyles = {\n\t\tsolid: \"border-solid\",\n\t\tdashed: \"border-dashed\",\n\t\tdotted: \"border-dotted\",\n\t};\n\n\tconst colorStyle = color ? { borderColor: color } : {};\n\n\tconst thicknessStyle =\n\t\torientation === \"horizontal\"\n\t\t\t? { borderTopWidth: `${thickness}px` }\n\t\t\t: { borderLeftWidth: `${thickness}px` };\n\n\tconst lineClasses = `\n    flex-grow\n    ${orientation === \"horizontal\" ? \"border-t\" : \"border-l\"}\n    ${variantStyles[variant]}\n    ${!color ? \"border-border-[#13131d] dark:border-[#13131d]\" : \"\"}\n  `;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${baseClasses} ${orientationClasses} ${className}`}\n\t\t\trole={decorative ? \"none\" : \"separator\"}\n\t\t\taria-orientation={orientation}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children ? (\n\t\t\t\t<>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t\t></div>\n\t\t\t\t\t<span className=\"flex items-center px-4 text-sm text-zinc-500 font-medium\">\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t\t></div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div\n\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t></div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Divider;\n",
      "type": "registry:ui"
    }
  ]
}