{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "divider",
  "title": "Divider",
  "description": "A minimalistic divider component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "divider.tsx",
      "content": "\"use client\";\nimport Divider from \"./divider\";\n\nexport default function DividerView() {\n  return (\n    <div className=\"flex flex-col gap-8 w-full max-w-full mx-auto p-4\">\n      <div className=\"w-full rounded-lg\">\n        <div className=\"text-sm text-zinc-400 mb-1\">Tickets Sold</div>\n        <div className=\"text-3xl font-semibold text-white mb-6\">1,587</div>\n\n        <Divider>\n          <span className=\"text-sm text-zinc-500\">Details</span>\n        </Divider>\n\n        <p className=\"text-sm text-zinc-400 mt-6 leading-relaxed\">\n          Ticket sales peaked in March, largely due to the{\" \"}\n          <b>&ldquo;March Mountain Madness&rdquo;</b> event on March 12th,\n          drawing significant tourist interest. Operational efficiencies and\n          local hotel partnerships further boosted sales. Additionally, targeted\n          social media promotions ahead of the event significantly increased\n          online bookings.\n        </p>\n      </div>\n\n      {/* Text section divider */}\n      <Divider variant=\"dashed\" thickness={2} color=\"gray\">\n        <span className=\"text-zinc-400 text-sm\">Section Break</span>\n      </Divider>\n\n      {/* Styled Tremor-style button in divider */}\n      <Divider>\n        <button\n          className=\"relative inline-flex items-center justify-center whitespace-nowrap border px-3 py-2 text-center text-sm font-medium shadow-xs transition-all duration-100 ease-in-out disabled:pointer-events-none disabled:shadow-none outline-offset-2 outline-0 focus-visible:outline-2 outline-blue-500 dark:outline-blue-500 border-gray-300 dark:border-gray-800 text-gray-900 dark:text-gray-50 bg-white dark:bg-gray-950 hover:bg-gray-50 dark:hover:bg-gray-900/60 disabled:text-gray-400 dark:disabled:text-gray-600 rounded-full\"\n          tremor-id=\"tremor-raw\"\n        >\n          Show more\n        </button>\n      </Divider>\n\n      {/* Icon example */}\n      <Divider>\n        <span className=\"text-sm text-zinc-500 flex items-center gap-1\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"w-4 h-4\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M13 16h-1v-4h-1m1-4h.01M12 20.5C6.201 20.5 1.5 15.799 1.5 10S6.201-.5 12-.5 22.5 4.701 22.5 10 17.799 20.5 12 20.5z\"\n            />\n          </svg>\n          Info line\n        </span>\n      </Divider>\n    </div>\n  );\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "divider.tsx",
      "content": "\"use client\";\nimport React from \"react\";\n\ninterface DividerProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: \"horizontal\" | \"vertical\";\n  decorative?: boolean;\n  variant?: \"solid\" | \"dashed\" | \"dotted\";\n  thickness?: number;\n  color?: string;\n  className?: string;\n  children?: React.ReactNode;\n}\n\nconst Divider = ({\n  orientation = \"horizontal\",\n  decorative = true,\n  variant = \"solid\",\n  thickness = 1,\n  color,\n  className = \"\",\n  children,\n  ...props\n}: DividerProps) => {\n  const baseClasses = \"flex items-center\";\n  const orientationClasses =\n    orientation === \"horizontal\" ? \"w-full my-8\" : \"h-full self-stretch mx-8\";\n\n  const variantStyles = {\n    solid: \"border-solid\",\n    dashed: \"border-dashed\",\n    dotted: \"border-dotted\",\n  };\n\n  const colorStyle = color ? { borderColor: color } : {};\n\n  const thicknessStyle =\n    orientation === \"horizontal\"\n      ? { borderTopWidth: `${thickness}px` }\n      : { borderLeftWidth: `${thickness}px` };\n\n  const lineClasses = `\n    flex-grow\n    ${orientation === \"horizontal\" ? \"border-t\" : \"border-l\"}\n    ${variantStyles[variant]}\n    ${!color ? \"border-border-[#13131d] dark:border-[#13131d]\" : \"\"}\n  `;\n\n  return (\n    <div\n      className={`${baseClasses} ${orientationClasses} ${className}`}\n      role={decorative ? \"none\" : \"separator\"}\n      aria-orientation={orientation}\n      {...props}\n    >\n      {children ? (\n        <>\n          <div\n            className={lineClasses}\n            style={{ ...colorStyle, ...thicknessStyle }}\n          ></div>\n          <span className=\"flex items-center px-4 text-sm text-zinc-500 font-medium\">\n            {children}\n          </span>\n          <div\n            className={lineClasses}\n            style={{ ...colorStyle, ...thicknessStyle }}\n          ></div>\n        </>\n      ) : (\n        <div\n          className={lineClasses}\n          style={{ ...colorStyle, ...thicknessStyle }}\n        ></div>\n      )}\n    </div>\n  );\n};\n\nexport default Divider;\n",
      "type": "registry:ui"
    }
  ]
}