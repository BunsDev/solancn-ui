{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "divider",
  "title": "Divider",
  "description": "A minimalistic divider component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:component",
  "dependencies": [],
  "files": [
    {
      "path": "divider.tsx",
      "content": "\"use client\";\nimport Divider from \"./divider\";\n\nexport default function DividerView() {\n\treturn (\n\t\t<div className=\"flex flex-col gap-8 w-full max-w-full mx-auto p-4 bg-black text-white\">\n\t\t\t<div className=\"w-full rounded-lg\">\n\t\t\t\t<div className=\"text-sm text-[#14F195] mb-1\">Total Transactions</div>\n\t\t\t\t<div className=\"text-3xl font-semibold text-white mb-6\">1,587</div>\n\n\t\t\t\t<Divider color=\"purple\">\n\t\t\t\t\t<span>Transaction Details</span>\n\t\t\t\t</Divider>\n\n\t\t\t\t<p className=\"text-sm text-zinc-300 mt-6 leading-relaxed\">\n\t\t\t\t\tTransaction volume peaked in March, largely due to the{\" \"}\n\t\t\t\t\t<b style={{ color: \"#14F195\" }}>&ldquo;Solana Breakpoint&rdquo;</b> event,\n\t\t\t\t\tdrawing significant developer interest. Network upgrades and \n\t\t\t\t\tDeFi protocol launches further boosted activity. Additionally, targeted\n\t\t\t\t\tSolana developer grants ahead of the event significantly increased\n\t\t\t\t\tsmart contract deployments.\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{/* Text section divider */}\n\t\t\t<Divider variant=\"dashed\" thickness={2} color=\"green\">\n\t\t\t\t<span>Network Statistics</span>\n\t\t\t</Divider>\n\n\t\t\t{/* Solana-styled button in divider */}\n\t\t\t<Divider color=\"purple\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"relative inline-flex items-center justify-center whitespace-nowrap border px-4 py-2 text-center text-sm font-medium shadow-sm transition-all duration-200 ease-in-out disabled:pointer-events-none disabled:shadow-none outline-offset-2 outline-0 focus-visible:outline-2 border-[#9945FF] text-white bg-[#9945FF]/90 hover:bg-[#9945FF] disabled:text-gray-400 rounded-lg\"\n\t\t\t\t>\n\t\t\t\t\tView All Transactions\n\t\t\t\t</button>\n\t\t\t</Divider>\n\n\t\t\t{/* Solana icon example */}\n\t\t\t<Divider color=\"green\">\n\t\t\t\t<span className=\"flex items-center gap-2\">\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\twidth=\"16\"\n\t\t\t\t\t\theight=\"16\"\n\t\t\t\t\t\tfill=\"currentColor\"\n\t\t\t\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path d=\"M6.361 20.881c0.182-0.182 0.433-0.295 0.711-0.295h24.576c0.446 0 0.67 0.541 0.354 0.857l-6.358 6.361c-0.182 0.182-0.433 0.295-0.711 0.295h-24.576c-0.446 0-0.67-0.541-0.354-0.857l6.358-6.361z\"></path>\n\t\t\t\t\t\t<path d=\"M6.361 4.655c0.182-0.182 0.433-0.295 0.711-0.295h24.576c0.446 0 0.67 0.541 0.354 0.857l-6.358 6.361c-0.182 0.182-0.433 0.295-0.711 0.295h-24.576c-0.446 0-0.67-0.541-0.354-0.857l6.358-6.361z\"></path>\n\t\t\t\t\t\t<path d=\"M25.639 12.765c-0.182-0.182-0.433-0.295-0.711-0.295h-24.576c-0.446 0-0.67 0.541-0.354 0.857l6.358 6.361c0.182 0.182 0.433 0.295 0.711 0.295h24.576c0.446 0 0.67-0.541 0.354-0.857l-6.358-6.361z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t\tPowered by Solana\n\t\t\t\t</span>\n\t\t\t</Divider>\n\t\t\t\t\t{/* Stats divider */}\n\t\t\t<Divider color=\"purple\">\n\t\t\t\t<span>Key Metrics</span>\n\t\t\t</Divider>\n\n\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n\t\t\t\t<div className=\"p-4 rounded-lg bg-[#13131d] border border-[#9945FF]/30\">\n\t\t\t\t\t<div className=\"text-sm text-[#14F195] mb-1\">TPS</div>\n\t\t\t\t\t<div className=\"text-2xl font-bold\">4,128</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"p-4 rounded-lg bg-[#13131d] border border-[#9945FF]/30\">\n\t\t\t\t\t<div className=\"text-sm text-[#14F195] mb-1\">Active Validators</div>\n\t\t\t\t\t<div className=\"text-2xl font-bold\">1,785</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"p-4 rounded-lg bg-[#13131d] border border-[#9945FF]/30\">\n\t\t\t\t\t<div className=\"text-sm text-[#14F195] mb-1\">Total Value Locked</div>\n\t\t\t\t\t<div className=\"text-2xl font-bold\">$2.45B</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    },
    {
      "path": "divider.tsx",
      "content": "\"use client\";\nimport type React from \"react\";\n\n// Solana theme colors\nconst SOLANA_COLORS = {\n\tpurple: \"#9945FF\",\n\tgreen: \"#14F195\",\n\tblack: \"#000000\",\n\tdarkGray: \"#13131d\",\n};\n\ninterface DividerProps extends React.HTMLAttributes<HTMLDivElement> {\n\torientation?: \"horizontal\" | \"vertical\";\n\tdecorative?: boolean;\n\tvariant?: \"solid\" | \"dashed\" | \"dotted\";\n\tthickness?: number;\n\tcolor?: \"purple\" | \"green\" | \"default\" | string;\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n}\n\nconst Divider = ({\n\torientation = \"horizontal\",\n\tdecorative = true,\n\tvariant = \"solid\",\n\tthickness = 1,\n\tcolor = \"default\",\n\tclassName = \"\",\n\tchildren,\n\t...props\n}: DividerProps) => {\n\tconst baseClasses = \"flex items-center\";\n\tconst orientationClasses =\n\t\torientation === \"horizontal\" ? \"w-full my-8\" : \"h-full self-stretch mx-8\";\n\n\tconst variantStyles = {\n\t\tsolid: \"border-solid\",\n\t\tdashed: \"border-dashed\",\n\t\tdotted: \"border-dotted\",\n\t};\n\n\t// Map predefined Solana color names to hex values, or use custom color if provided\nconst resolveColor = () => {\n\t\tif (color === \"purple\") return SOLANA_COLORS.purple;\n\t\tif (color === \"green\") return SOLANA_COLORS.green;\n\t\tif (color === \"default\") return SOLANA_COLORS.purple;\n\t\treturn color; // Use custom color if provided\n\t};\n\t\n\tconst colorStyle = { borderColor: resolveColor() };\n\n\tconst thicknessStyle =\n\t\torientation === \"horizontal\"\n\t\t\t? { borderTopWidth: `${thickness}px` }\n\t\t\t: { borderLeftWidth: `${thickness}px` };\n\n\tconst lineClasses = `\n    flex-grow\n    ${orientation === \"horizontal\" ? \"border-t\" : \"border-l\"}\n    ${variantStyles[variant]}\n  `;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${baseClasses} ${orientationClasses} ${className}`}\n\t\t\trole={decorative ? \"none\" : \"separator\"}\n\t\t\taria-orientation={orientation}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children ? (\n\t\t\t\t<>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t\t></div>\n\t\t\t\t\t<span className=\"flex items-center px-4 text-sm font-medium\" style={{ color: color === \"green\" ? SOLANA_COLORS.green : SOLANA_COLORS.purple }}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t\t></div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div\n\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t></div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Divider;\n",
      "type": "registry:component"
    },
    {
      "path": "divider",
      "content": "\"use client\";\nimport type React from \"react\";\n\n// Solana theme colors\nconst SOLANA_COLORS = {\n\tpurple: \"#9945FF\",\n\tgreen: \"#14F195\",\n\tblack: \"#000000\",\n\tdarkGray: \"#13131d\",\n};\n\ninterface DividerProps extends React.HTMLAttributes<HTMLDivElement> {\n\torientation?: \"horizontal\" | \"vertical\";\n\tdecorative?: boolean;\n\tvariant?: \"solid\" | \"dashed\" | \"dotted\";\n\tthickness?: number;\n\tcolor?: \"purple\" | \"green\" | \"default\" | string;\n\tclassName?: string;\n\tchildren?: React.ReactNode;\n}\n\nconst Divider = ({\n\torientation = \"horizontal\",\n\tdecorative = true,\n\tvariant = \"solid\",\n\tthickness = 1,\n\tcolor = \"default\",\n\tclassName = \"\",\n\tchildren,\n\t...props\n}: DividerProps) => {\n\tconst baseClasses = \"flex items-center\";\n\tconst orientationClasses =\n\t\torientation === \"horizontal\" ? \"w-full my-8\" : \"h-full self-stretch mx-8\";\n\n\tconst variantStyles = {\n\t\tsolid: \"border-solid\",\n\t\tdashed: \"border-dashed\",\n\t\tdotted: \"border-dotted\",\n\t};\n\n\t// Map predefined Solana color names to hex values, or use custom color if provided\nconst resolveColor = () => {\n\t\tif (color === \"purple\") return SOLANA_COLORS.purple;\n\t\tif (color === \"green\") return SOLANA_COLORS.green;\n\t\tif (color === \"default\") return SOLANA_COLORS.purple;\n\t\treturn color; // Use custom color if provided\n\t};\n\t\n\tconst colorStyle = { borderColor: resolveColor() };\n\n\tconst thicknessStyle =\n\t\torientation === \"horizontal\"\n\t\t\t? { borderTopWidth: `${thickness}px` }\n\t\t\t: { borderLeftWidth: `${thickness}px` };\n\n\tconst lineClasses = `\n    flex-grow\n    ${orientation === \"horizontal\" ? \"border-t\" : \"border-l\"}\n    ${variantStyles[variant]}\n  `;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`${baseClasses} ${orientationClasses} ${className}`}\n\t\t\trole={decorative ? \"none\" : \"separator\"}\n\t\t\taria-orientation={orientation}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children ? (\n\t\t\t\t<>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t\t></div>\n\t\t\t\t\t<span className=\"flex items-center px-4 text-sm font-medium\" style={{ color: color === \"green\" ? SOLANA_COLORS.green : SOLANA_COLORS.purple }}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t\t></div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div\n\t\t\t\t\tclassName={lineClasses}\n\t\t\t\t\tstyle={{ ...colorStyle, ...thicknessStyle }}\n\t\t\t\t></div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Divider;\n",
      "type": "registry:component"
    }
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  }
}