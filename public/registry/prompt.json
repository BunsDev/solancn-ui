{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "prompt",
  "title": "Prompt",
  "description": "A minimalistic prompt component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "prompt.tsx",
      "content": "\"use client\";\n\n// Icons for the component\nimport {\n\tArrowUp,\n\tBox,\n\tBrain,\n\tChevronDown,\n\tFileText,\n\tImage as ImageIcon,\n\tMic,\n\tPlus,\n} from \"lucide-react\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst PromptComponent = () => {\n\tconst [prompt, setPrompt] = useState(\"\");\n\n\t// State to manage the visibility of popups and dropdowns\n\tconst [isAddPopupOpen, setAddPopupOpen] = useState(false);\n\tconst [isModelOpen, setModelOpen] = useState(false);\n\n\t// State for the selected model\n\tconst [selectedModel, setSelectedModel] = useState(\"Brainwave 2.5\");\n\tconst models = [\"Brainwave 2.5\", \"Creative Fusion\", \"Visionary AI 3.0\"];\n\n\t// Refs for the popups to detect outside clicks\n\tconst addPopupRef = useRef<HTMLDivElement>(null);\n\tconst modelRef = useRef<HTMLDivElement>(null);\n\n\t// Effect to handle clicks outside of the popups/dropdowns\n\tuseEffect(() => {\n\t\tconst handleClickOutside = (event: MouseEvent) => {\n\t\t\tif (\n\t\t\t\taddPopupRef.current &&\n\t\t\t\t!addPopupRef.current.contains(event.target as Node)\n\t\t\t) {\n\t\t\t\tsetAddPopupOpen(false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\tmodelRef.current &&\n\t\t\t\t!modelRef.current.contains(event.target as Node)\n\t\t\t) {\n\t\t\t\tsetModelOpen(false);\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener(\"mousedown\", handleClickOutside);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"mousedown\", handleClickOutside);\n\t\t};\n\t}, []);\n\n\tconst handleModelSelect = (model: string) => {\n\t\tsetSelectedModel(model);\n\t\tsetModelOpen(false);\n\t};\n\n\tconst handleUpload = () => {\n\t\tif (!prompt.trim()) {\n\t\t\t// Using console.error instead of alert\n\t\t\tconsole.error(\"Please describe your 3D object or scene first!\");\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(`Uploading prompt: \"${prompt}\" with model: ${selectedModel}`);\n\t\t// Add your upload logic here\n\t};\n\n\tconst addMenuItems = [\n\t\t{\n\t\t\ticon: (\n\t\t\t\t<ImageIcon size={20} className=\"text-gray-500 dark:text-gray-400\" />\n\t\t\t),\n\t\t\ttext: \"Add photos or videos\",\n\t\t},\n\t\t{\n\t\t\ticon: <Box size={20} className=\"text-gray-500 dark:text-gray-400\" />,\n\t\t\ttext: \"Add 3D objects\",\n\t\t},\n\t\t{\n\t\t\ticon: <FileText size={20} className=\"text-gray-500 dark:text-gray-400\" />,\n\t\t\ttext: \"Add files (docs, txt...)\",\n\t\t},\n\t];\n\n\treturn (\n\t\t<div className=\"w-full max-w-2xl p-4\">\n\t\t\t<div className=\"bg-white/80 backdrop-blur-xl dark:bg-black/90 rounded-3xl shadow-2xl border border-gray-200/50 dark:border-gray-800/50 p-6 transition-all duration-300 hover:shadow-3xl\">\n\t\t\t\t<textarea\n\t\t\t\t\tclassName=\"w-full p-3 bg-transparent text-gray-800 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none resize-none text-base font-medium leading-relaxed\"\n\t\t\t\t\trows={2}\n\t\t\t\t\tplaceholder=\"Describe your 3D object or scene...\"\n\t\t\t\t\tvalue={prompt}\n\t\t\t\t\tonChange={(e) => setPrompt(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t{/* Responsive container for controls */}\n\t\t\t\t<div className=\"flex flex-col md:flex-row items-center justify-between mt-4 gap-4 md:gap-0\">\n\t\t\t\t\t{/* Left side controls */}\n\t\t\t\t\t<div className=\"flex flex-wrap items-center gap-3\">\n\t\t\t\t\t\t{/* Add Button and Popup */}\n\t\t\t\t\t\t<div className=\"relative\" ref={addPopupRef}>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => setAddPopupOpen(!isAddPopupOpen)}\n\t\t\t\t\t\t\t\tclassName=\"flex items-center justify-center w-12 h-12 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 hover:from-gray-100 hover:to-gray-200 dark:hover:from-gray-800 dark:hover:to-gray-700 text-gray-600 dark:text-gray-300 rounded-2xl transition-all duration-200 shadow-lg hover:shadow-xl border border-gray-200/50 dark:border-gray-700/50\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Plus size={22} />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{isAddPopupOpen && (\n\t\t\t\t\t\t\t\t<div className=\"absolute bottom-full left-0 mb-3 w-72 bg-white/95 backdrop-blur-xl dark:bg-gray-900/95 rounded-2xl shadow-2xl border border-gray-200/50 dark:border-gray-700/50 z-10\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{addMenuItems.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex items-center gap-4 p-4 hover:bg-gray-50/80 dark:hover:bg-gray-800/80 cursor-pointer rounded-xl transition-colors duration-200 first:rounded-t-2xl last:rounded-b-2xl\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{item.icon}\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-medium text-gray-700 dark:text-gray-200\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.text}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Model Selection Button and Dropdown */}\n\t\t\t\t\t\t<div className=\"relative\" ref={modelRef}>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => setModelOpen(!isModelOpen)}\n\t\t\t\t\t\t\t\tclassName=\"flex items-center justify-center h-12 px-4 lg:px-5 bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-900/30 dark:to-indigo-800/30 hover:from-blue-100 hover:to-indigo-200 dark:hover:from-blue-800/40 dark:hover:to-indigo-700/40 text-gray-800 dark:text-gray-200 rounded-2xl transition-all duration-200 shadow-lg hover:shadow-xl border border-blue-200/50 dark:border-blue-700/30\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Brain size={18} className=\"text-blue-600 dark:text-blue-400\" />\n\t\t\t\t\t\t\t\t<span className=\"font-semibold ml-2 hidden lg:block\">\n\t\t\t\t\t\t\t\t\t{selectedModel}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<ChevronDown size={16} className=\"ml-2 hidden lg:block\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{isModelOpen && (\n\t\t\t\t\t\t\t\t<div className=\"absolute bottom-full left-0 mb-3 w-64 bg-white/95 backdrop-blur-xl dark:bg-gray-900/95 rounded-2xl shadow-2xl border border-gray-200/50 dark:border-gray-700/50 z-10\">\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{models.map((model) => (\n\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\tkey={model}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleModelSelect(model)}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"p-4 hover:bg-gray-50/80 dark:hover:bg-gray-800/80 cursor-pointer font-medium text-gray-700 dark:text-gray-200 rounded-xl transition-colors duration-200 first:rounded-t-2xl last:rounded-b-2xl\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{model}\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Right side controls */}\n\t\t\t\t\t<div className=\"flex items-center gap-3\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => console.log(\"Mic clicked\")}\n\t\t\t\t\t\t\tclassName=\"flex items-center justify-center w-12 h-12 bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 hover:from-gray-100 hover:to-gray-200 dark:hover:from-gray-800 dark:hover:to-gray-700 text-gray-600 dark:text-gray-300 rounded-full transition-all duration-200 shadow-lg hover:shadow-xl border border-gray-200/50 dark:border-gray-700/50\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Mic size={22} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={handleUpload}\n\t\t\t\t\t\t\tclassName={`flex items-center justify-center w-12 h-12 rounded-2xl transition-all duration-200 shadow-lg hover:shadow-xl ${\n\t\t\t\t\t\t\t\tprompt.trim()\n\t\t\t\t\t\t\t\t\t? \"bg-gradient-to-br from-gray-800 to-gray-900 hover:from-gray-900 hover:to-black dark:from-blue-600 dark:to-blue-700 dark:hover:from-blue-500 dark:hover:to-blue-600 text-white\"\n\t\t\t\t\t\t\t\t\t: \"bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-800 dark:to-gray-700 text-gray-400 dark:text-gray-500 cursor-not-allowed\"\n\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ArrowUp size={22} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PromptComponent;\n",
      "type": "registry:ui"
    },
    {
      "path": "prompt2.tsx",
      "content": "import {\n\tArrowRight,\n\tBell,\n\tCode,\n\tFileText,\n\tGlobe,\n\tPaperclip,\n\tZap,\n} from \"lucide-react\";\nimport type React from \"react\";\n\n// Define types for component props for better type checking\ninterface SuggestionButtonProps {\n\ticon: React.ReactNode;\n\ttext: string;\n}\n\n// New SVG Icon Component for the logo\nconst CoolStarIcon = () => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tfill=\"none\"\n\t\tviewBox=\"0 0 200 200\"\n\t\tclassName=\"w-16 h-16\"\n\t>\n\t\t<g clipPath=\"url(#cs_clip_1_star-8)\">\n\t\t\t<mask\n\t\t\t\tid=\"cs_mask_1_star-8\"\n\t\t\t\tstyle={{ maskType: \"alpha\" }}\n\t\t\t\twidth=\"200\"\n\t\t\t\theight=\"200\"\n\t\t\t\tx=\"0\"\n\t\t\t\ty=\"0\"\n\t\t\t\tmaskUnits=\"userSpaceOnUse\"\n\t\t\t>\n\t\t\t\t<path\n\t\t\t\t\tfill=\"#fff\"\n\t\t\t\t\td=\"M100 0c12.424 62.382 37.256 87.456 100 100-62.759 12.544-87.591 37.618-100 100-12.424-62.382-37.256-87.471-100-100C62.758 87.456 87.591 62.382 100 0z\"\n\t\t\t\t></path>\n\t\t\t</mask>\n\t\t\t<g mask=\"url(#cs_mask_1_star-8)\">\n\t\t\t\t<path fill=\"#fff\" d=\"M200 0H0v200h200V0z\"></path>\n\t\t\t\t<path\n\t\t\t\t\tfill=\"url(#paint0_linear_star-8)\"\n\t\t\t\t\tfillOpacity=\"0.55\"\n\t\t\t\t\td=\"M200 0H0v200h200V0z\"\n\t\t\t\t></path>\n\t\t\t\t<g filter=\"url(#filter0_f_748_star-8)\">\n\t\t\t\t\t<path fill=\"#06F\" d=\"M213 69H93v141h120V69z\"></path>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</g>\n\t\t<defs>\n\t\t\t<filter\n\t\t\t\tid=\"filter0_f_748_star-8\"\n\t\t\t\twidth=\"245\"\n\t\t\t\theight=\"266\"\n\t\t\t\tx=\"30.5\"\n\t\t\t\ty=\"6.5\"\n\t\t\t\tcolorInterpolationFilters=\"sRGB\"\n\t\t\t\tfilterUnits=\"userSpaceOnUse\"\n\t\t\t>\n\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n\t\t\t\t<feBlend\n\t\t\t\t\tin=\"SourceGraphic\"\n\t\t\t\t\tin2=\"BackgroundImageFix\"\n\t\t\t\t\tresult=\"shape\"\n\t\t\t\t></feBlend>\n\t\t\t\t<feGaussianBlur\n\t\t\t\t\tresult=\"effect1_foregroundBlur_748_star-8\"\n\t\t\t\t\tstdDeviation=\"31.25\"\n\t\t\t\t></feGaussianBlur>\n\t\t\t</filter>\n\t\t\t<linearGradient\n\t\t\t\tid=\"paint0_linear_star-8\"\n\t\t\t\tx1=\"162\"\n\t\t\t\tx2=\"49.5\"\n\t\t\t\ty1=\"38\"\n\t\t\t\ty2=\"150.5\"\n\t\t\t\tgradientUnits=\"userSpaceOnUse\"\n\t\t\t>\n\t\t\t\t<stop stopColor=\"#FF1F00\"></stop>\n\t\t\t\t<stop offset=\"1\" stopColor=\"#FF58E4\"></stop>\n\t\t\t</linearGradient>\n\t\t\t<clipPath id=\"cs_clip_1_star-8\">\n\t\t\t\t<path fill=\"#fff\" d=\"M0 0H200V200H0z\"></path>\n\t\t\t</clipPath>\n\t\t</defs>\n\t\t<g style={{ mixBlendMode: \"overlay\" }} mask=\"url(#cs_mask_1_star-8)\">\n\t\t\t<path\n\t\t\t\tfill=\"gray\"\n\t\t\t\tstroke=\"transparent\"\n\t\t\t\td=\"M200 0H0v200h200V0z\"\n\t\t\t\tfilter=\"url(#cs_noise_1_star-8)\"\n\t\t\t></path>\n\t\t</g>\n\t\t<defs>\n\t\t\t<filter\n\t\t\t\tid=\"cs_noise_1_star-8\"\n\t\t\t\twidth=\"100%\"\n\t\t\t\theight=\"100%\"\n\t\t\t\tx=\"0%\"\n\t\t\t\ty=\"0%\"\n\t\t\t\tfilterUnits=\"objectBoundingBox\"\n\t\t\t>\n\t\t\t\t<feTurbulence\n\t\t\t\t\tbaseFrequency=\"0.6\"\n\t\t\t\t\tnumOctaves=\"5\"\n\t\t\t\t\tresult=\"out1\"\n\t\t\t\t\tseed=\"4\"\n\t\t\t\t></feTurbulence>\n\t\t\t\t<feComposite\n\t\t\t\t\tin=\"out1\"\n\t\t\t\t\tin2=\"SourceGraphic\"\n\t\t\t\t\toperator=\"in\"\n\t\t\t\t\tresult=\"out2\"\n\t\t\t\t></feComposite>\n\t\t\t\t<feBlend\n\t\t\t\t\tin=\"SourceGraphic\"\n\t\t\t\t\tin2=\"out2\"\n\t\t\t\t\tmode=\"overlay\"\n\t\t\t\t\tresult=\"out3\"\n\t\t\t\t></feBlend>\n\t\t\t</filter>\n\t\t</defs>\n\t</svg>\n);\n\n// Reusable button component for the suggestions\nconst SuggestionButton: React.FC<SuggestionButtonProps> = ({ icon, text }) => (\n\t<button className=\"flex items-center justify-center bg-white dark:bg-zinc-800 hover:bg-gray-50 dark:hover:bg-zinc-700 border border-gray-200 dark:border-zinc-700 rounded-lg px-3 py-2 sm:px-4 text-sm text-gray-700 dark:text-zinc-300 transition-colors duration-200 ease-in-out\">\n\t\t{icon}\n\t\t<span>{text}</span>\n\t</button>\n);\n\nconst Prompting: React.FC = () => {\n\treturn (\n\t\t<div className=\"font-sans text-gray-900 dark:text-zinc-100 bg-white dark:bg-zinc-950\">\n\t\t\t<div className=\"p-4\">\n\t\t\t\t<main className=\"w-full max-w-3xl mx-auto flex flex-col items-center text-center\">\n\t\t\t\t\t{/* Logo */}\n\t\t\t\t\t<div className=\"mb-6\">\n\t\t\t\t\t\t<CoolStarIcon />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Main Heading */}\n\t\t\t\t\t<h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-bold tracking-tight text-black dark:text-white\">\n\t\t\t\t\t\tUnleash Your\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p className=\"text-4xl sm:text-5xl lg:text-6xl font-light tracking-tight text-gray-500 dark:text-zinc-400 mt-1 sm:mt-2\">\n\t\t\t\t\t\tCreativity.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t{/* Suggestion Buttons */}\n\t\t\t\t\t<div className=\"flex flex-wrap items-center justify-center gap-2 sm:gap-3 mt-8 sm:mt-10\">\n\t\t\t\t\t\t<SuggestionButton\n\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t<Zap className=\"h-5 w-5 mr-2 text-blue-500 dark:text-blue-400\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttext=\"Generate rest API\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SuggestionButton\n\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t<Code className=\"h-5 w-5 mr-2 text-blue-500 dark:text-blue-400\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttext=\"Debug Python code\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SuggestionButton\n\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t<FileText className=\"h-5 w-5 mr-2 text-blue-500 dark:text-blue-400\" />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttext=\"Explain React hooks\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Command Input Area */}\n\t\t\t\t\t<div className=\"w-full max-w-2xl mt-10 sm:mt-12\">\n\t\t\t\t\t\t<div className=\"bg-gray-100 dark:bg-zinc-800 rounded-xl p-2 sm:p-3\">\n\t\t\t\t\t\t\t{/* Top part with input */}\n\t\t\t\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Type / for command\"\n\t\t\t\t\t\t\t\t\tclassName=\"w-full bg-transparent py-2 px-3 text-gray-800 dark:text-zinc-200 placeholder-gray-500 dark:placeholder-zinc-400 focus:outline-none text-sm\"\n\t\t\t\t\t\t\t\t\taria-label=\"Command input\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/* Bottom part with actions */}\n\t\t\t\t\t\t\t<div className=\"flex justify-between items-center mt-2\">\n\t\t\t\t\t\t\t\t{/* Left-side action buttons */}\n\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1 sm:gap-2 text-gray-600 dark:text-zinc-400 text-sm\">\n\t\t\t\t\t\t\t\t\t<button className=\"flex items-center gap-1.5 p-1.5 rounded-md hover:bg-gray-200 dark:hover:bg-zinc-700 transition-colors\">\n\t\t\t\t\t\t\t\t\t\t<Paperclip className=\"h-5 w-5\" strokeWidth={1.5} />\n\t\t\t\t\t\t\t\t\t\t<span className=\"hidden sm:inline\">Tools</span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button className=\"flex items-center gap-1.5 p-1.5 rounded-md hover:bg-gray-200 dark:hover:bg-zinc-700 transition-colors\">\n\t\t\t\t\t\t\t\t\t\t<Globe className=\"h-5 w-5\" strokeWidth={1.5} />\n\t\t\t\t\t\t\t\t\t\t<span className=\"hidden sm:inline\">Search</span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{/* Right-side icons */}\n\t\t\t\t\t\t\t\t<div className=\"flex items-center gap-1 text-gray-500 dark:text-zinc-400\">\n\t\t\t\t\t\t\t\t\t<button className=\"p-2 rounded-full hover:bg-gray-200 dark:hover:bg-zinc-700 transition-colors\">\n\t\t\t\t\t\t\t\t\t\t<Bell className=\"h-5 w-5\" strokeWidth={1.5} />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button className=\"bg-blue-500 hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 text-white w-8 h-8 rounded-lg flex items-center justify-center transition-colors duration-200\">\n\t\t\t\t\t\t\t\t\t\t<ArrowRight className=\"h-5 w-5\" />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* Footer */}\n\t\t\t\t\t\t<footer className=\"mt-4 text-xs text-gray-500 dark:text-zinc-400 text-center px-2\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tNoera may make mistakes. We recommend checking important\n\t\t\t\t\t\t\t\tinformation.{\" \"}\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t\tclassName=\"text-gray-600 dark:text-zinc-300 underline hover:text-gray-800 dark:hover:text-zinc-100\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPrivacy Notice\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Prompting;\n",
      "type": "registry:ui"
    },
    {
      "path": "v0.tsx",
      "content": "\"use client\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n\n// Utility function to join class names (replaces `cn`)\nconst classNames = (\n\t...classes: (string | undefined | null | false)[]\n): string => {\n\treturn classes.filter(Boolean).join(\" \");\n};\n\n// Custom hook for auto-resizing textarea (replaces `useAutoResizeTextarea`)\nconst useAutoResizeTextarea = ({\n\tminHeight,\n\tmaxHeight,\n}: {\n\tminHeight?: number;\n\tmaxHeight?: number;\n}) => {\n\tconst textareaRef = useRef<HTMLTextAreaElement>(null);\n\n\tconst adjustHeight = useCallback(\n\t\t(forceShrink = false) => {\n\t\t\tif (textareaRef.current) {\n\t\t\t\t// Temporarily set height to auto to calculate scrollHeight correctly\n\t\t\t\ttextareaRef.current.style.height = \"auto\";\n\t\t\t\tlet newHeight = textareaRef.current.scrollHeight;\n\n\t\t\t\t// Apply min and max height constraints\n\t\t\t\tif (minHeight && newHeight < minHeight) {\n\t\t\t\t\tnewHeight = minHeight;\n\t\t\t\t}\n\t\t\t\tif (maxHeight && newHeight > maxHeight) {\n\t\t\t\t\tnewHeight = maxHeight;\n\t\t\t\t}\n\n\t\t\t\t// If forceShrink is true, reset to minHeight\n\t\t\t\tif (forceShrink && minHeight) {\n\t\t\t\t\tnewHeight = minHeight;\n\t\t\t\t}\n\n\t\t\t\ttextareaRef.current.style.height = `${newHeight}px`;\n\t\t\t}\n\t\t},\n\t\t[minHeight, maxHeight],\n\t);\n\n\t// Adjust height on initial render and when value changes\n\tuseEffect(() => {\n\t\tadjustHeight();\n\t}, [adjustHeight]); // Include adjustHeight in dependencies\n\n\treturn { textareaRef, adjustHeight };\n};\n\n// Inline SVG Icons (replaces lucide-react components)\nconst Paperclip = (props: React.SVGProps<SVGSVGElement>) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t\t{...props}\n\t>\n\t\t<path d=\"m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48\" />\n\t</svg>\n);\n\nconst PlusIcon = (props: React.SVGProps<SVGSVGElement>) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t\t{...props}\n\t>\n\t\t<path d=\"M12 5v14\" />\n\t\t<path d=\"M5 12h14\" />\n\t</svg>\n);\n\nconst ArrowUpIcon = (props: React.SVGProps<SVGSVGElement>) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstrokeWidth=\"2\"\n\t\tstrokeLinecap=\"round\"\n\t\tstrokeLinejoin=\"round\"\n\t\t{...props}\n\t>\n\t\t<path d=\"m5 12 7-7 7 7\" />\n\t\t<path d=\"M12 19V5\" />\n\t</svg>\n);\n\n// Recreated Button component\ninterface ButtonProps {\n\tchildren: React.ReactNode;\n\tclassName?: string;\n\ttype?: \"button\" | \"submit\" | \"reset\";\n\tonClick?: () => void;\n\tvariant?:\n\t\t| \"default\"\n\t\t| \"outline\"\n\t\t| \"secondary\"\n\t\t| \"ghost\"\n\t\t| \"link\"\n\t\t| \"destructive\";\n\tdisabled?: boolean;\n\tsize?: string; // Adding size prop to fix the error\n}\n\nconst Button = ({\n\tchildren,\n\tclassName,\n\ttype = \"button\",\n\tonClick,\n\tvariant = \"default\",\n\tdisabled = false,\n}: ButtonProps) => {\n\tconst baseClasses =\n\t\t\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\";\n\tlet variantClasses = \"\";\n\n\tswitch (variant) {\n\t\tcase \"outline\":\n\t\t\tvariantClasses =\n\t\t\t\t\"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-700 dark:bg-black dark:hover:bg-gray-900 dark:hover:text-white dark:text-gray-100\";\n\t\t\tbreak;\n\t\tcase \"secondary\":\n\t\t\tvariantClasses =\n\t\t\t\t\"bg-gray-100 text-gray-900 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-100 dark:hover:bg-gray-700\";\n\t\t\tbreak;\n\t\tcase \"ghost\":\n\t\t\tvariantClasses =\n\t\t\t\t\"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-100 dark:text-gray-300\";\n\t\t\tbreak;\n\t\tcase \"link\":\n\t\t\tvariantClasses =\n\t\t\t\t\"text-blue-600 underline-offset-4 hover:underline dark:text-blue-400\";\n\t\t\tbreak;\n\t\tcase \"destructive\":\n\t\t\tvariantClasses =\n\t\t\t\t\"bg-red-600 text-white hover:bg-red-700 dark:bg-red-700 dark:hover:bg-red-800\";\n\t\t\tbreak;\n\t\tdefault: // 'default'\n\t\t\tvariantClasses =\n\t\t\t\t\"bg-black text-white hover:bg-gray-800 dark:bg-white dark:text-black dark:hover:bg-gray-200\";\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<button\n\t\t\ttype={type}\n\t\t\tclassName={classNames(baseClasses, variantClasses, className)}\n\t\t\tonClick={onClick}\n\t\t\tdisabled={disabled}\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nexport function VercelV0Chat() {\n\tconst [value, setValue] = useState(\"\");\n\tconst [selectedModel, setSelectedModel] = useState(\"GPT-4\"); // State for selected model\n\tconst { textareaRef, adjustHeight } = useAutoResizeTextarea({\n\t\tminHeight: 60,\n\t\tmaxHeight: 200,\n\t});\n\n\t// Placeholder animation state\n\tconst placeholderTexts = useMemo(\n\t\t() => [\n\t\t\t\"Ask v0 a question...\",\n\t\t\t\"Generate a component...\",\n\t\t\t\"Create a new page...\",\n\t\t\t\"Design a landing page...\",\n\t\t\t\"Build a full stack app...\",\n\t\t],\n\t\t[],\n\t);\n\n\tconst [displayedPlaceholder, setDisplayedPlaceholder] = useState(\"\");\n\tconst [showCursor, setShowCursor] = useState(true); // For blinking cursor\n\tconst animationState = useRef<{\n\t\tcurrentTextIndex: number;\n\t\tcharIndex: number;\n\t\tisDeleting: boolean;\n\t\ttimeoutId: NodeJS.Timeout | null;\n\t}>({\n\t\tcurrentTextIndex: 0,\n\t\tcharIndex: 0,\n\t\tisDeleting: false,\n\t\ttimeoutId: null,\n\t});\n\n\tconst typingSpeed = 70;\n\tconst deletingSpeed = 40;\n\tconst pauseBeforeDelete = 1500;\n\tconst pauseBeforeType = 500;\n\n\t// Animation logic\n\tuseEffect(() => {\n\t\tconst state = animationState.current;\n\n\t\tconst animate = () => {\n\t\t\tconst fullText = placeholderTexts[state.currentTextIndex];\n\n\t\t\tif (!state.isDeleting) {\n\t\t\t\t// Typing phase\n\t\t\t\tif (state.charIndex < fullText.length) {\n\t\t\t\t\tsetDisplayedPlaceholder(fullText.substring(0, state.charIndex + 1));\n\t\t\t\t\tstate.charIndex++;\n\t\t\t\t\tstate.timeoutId = setTimeout(animate, typingSpeed);\n\t\t\t\t} else {\n\t\t\t\t\t// Finished typing\n\t\t\t\t\tstate.isDeleting = true;\n\t\t\t\t\tstate.timeoutId = setTimeout(animate, pauseBeforeDelete);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Deleting phase\n\t\t\t\tif (state.charIndex > 0) {\n\t\t\t\t\tsetDisplayedPlaceholder(fullText.substring(0, state.charIndex - 1));\n\t\t\t\t\tstate.charIndex--;\n\t\t\t\t\tstate.timeoutId = setTimeout(animate, deletingSpeed);\n\t\t\t\t} else {\n\t\t\t\t\t// Finished deleting\n\t\t\t\t\tstate.isDeleting = false;\n\t\t\t\t\tstate.currentTextIndex =\n\t\t\t\t\t\t(state.currentTextIndex + 1) % placeholderTexts.length;\n\t\t\t\t\tstate.charIndex = 0; // Reset charIndex for next phrase\n\t\t\t\t\tstate.timeoutId = setTimeout(animate, pauseBeforeType);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Start the animation loop\n\t\tstate.timeoutId = setTimeout(animate, pauseBeforeType);\n\n\t\t// Cursor blinking effect\n\t\tconst cursorInterval = setInterval(() => {\n\t\t\tsetShowCursor((prev) => !prev);\n\t\t}, 500); // Blinks every 500ms\n\n\t\treturn () => {\n\t\t\tif (state.timeoutId) {\n\t\t\t\tclearTimeout(state.timeoutId);\n\t\t\t}\n\t\t\tclearInterval(cursorInterval);\n\t\t};\n\t}, [placeholderTexts]); // Include placeholderTexts in dependencies\n\n\tconst handleSend = () => {\n\t\tif (value.trim()) {\n\t\t\tconsole.log(\"Sending message:\", value.trim());\n\t\t\tconsole.log(\"Using model:\", selectedModel); // Log the selected model\n\t\t\tsetValue(\"\");\n\t\t\tadjustHeight(true); // Force shrink after sending\n\t\t}\n\t};\n\n\tconst handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n\t\tif (e.key === \"Enter\" && !e.shiftKey) {\n\t\t\te.preventDefault();\n\t\t\thandleSend();\n\t\t}\n\t};\n\n\t// Adjust height on value change\n\tuseEffect(() => {\n\t\tadjustHeight();\n\t}, [value, adjustHeight]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={classNames(\n\t\t\t\t\"mx-auto flex w-full max-w-4xl flex-col items-center space-y-4 p-4 py-24 sm:space-y-8 font-sans\",\n\t\t\t)}\n\t\t>\n\t\t\t{/* Note: For production, add Inter font to _document.js or use a proper font loading strategy */}\n\n\t\t\t<h1 className=\"text-center text-2xl font-bold sm:text-4xl text-gray-900 dark:text-white\">\n\t\t\t\tWhat can I help you ship?\n\t\t\t</h1>\n\n\t\t\t<div className=\"w-full flex flex-col items-center space-y-4\">\n\t\t\t\t{/* Main Input area */}\n\t\t\t\t<div className=\"relative w-full rounded-xl border border-gray-200 bg-gray-50/20 shadow-lg dark:border-gray-700 dark:bg-gray-900/20 dark:shadow-gray-900/20\">\n\t\t\t\t\t<div className=\"overflow-y-auto\">\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tref={textareaRef}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetValue(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\tdisplayedPlaceholder +\n\t\t\t\t\t\t\t\t(showCursor && value.length === 0 ? \"|\" : \"\")\n\t\t\t\t\t\t\t} // Blinking cursor only when input is empty\n\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t\"w-full px-4 py-3\",\n\t\t\t\t\t\t\t\t\"resize-none\",\n\t\t\t\t\t\t\t\t\"bg-transparent\",\n\t\t\t\t\t\t\t\t\"border-none\",\n\t\t\t\t\t\t\t\t\"text-sm\",\n\t\t\t\t\t\t\t\t\"focus:outline-none\",\n\t\t\t\t\t\t\t\t\"focus-visible:ring-0 focus-visible:ring-offset-0\",\n\t\t\t\t\t\t\t\t\"placeholder:text-sm placeholder:text-gray-500 dark:placeholder:text-gray-400\",\n\t\t\t\t\t\t\t\t\"text-gray-900 dark:text-white\",\n\t\t\t\t\t\t\t\t\"min-h-[60px]\",\n\t\t\t\t\t\t\t\t\"rounded-xl\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"flex items-center justify-between p-3 border-t border-gray-200 dark:border-gray-700\">\n\t\t\t\t\t\t<div className=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\tclassName=\"group flex items-center gap-1 rounded-lg p-2\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Paperclip className=\"h-4 w-4\" />\n\t\t\t\t\t\t\t\t<span className=\"hidden text-xs transition-opacity group-hover:inline\">\n\t\t\t\t\t\t\t\t\tAttach\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t{/* Model Selection Dropdown */}\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"model-select\"\n\t\t\t\t\t\t\t\tvalue={selectedModel}\n\t\t\t\t\t\t\t\tonChange={(e) => setSelectedModel(e.target.value)}\n\t\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t\t\"px-3 py-2 rounded-md border border-gray-300 bg-white text-sm text-gray-900\",\n\t\t\t\t\t\t\t\t\t\"dark:border-gray-600 dark:bg-gray-800 dark:text-gray-100\",\n\t\t\t\t\t\t\t\t\t\"focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n\t\t\t\t\t\t\t\t\t\"dark:focus:ring-blue-400 dark:focus:border-blue-400\",\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"GPT-4\">GPT-4</option>\n\t\t\t\t\t\t\t\t<option value=\"DeepSak-R1\">DeepSak-R1</option>\n\t\t\t\t\t\t\t\t<option value=\"Gemini Pro\">Gemini Pro</option>\n\t\t\t\t\t\t\t\t<option value=\"Claude 3 Opus\">Claude 3 Opus</option>\n\t\t\t\t\t\t\t\t<option value=\"Llama 3\">Llama 3</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tclassName=\"flex items-center justify-between gap-1 rounded-lg border border-dashed px-2 py-1 text-sm border-gray-300 dark:border-gray-600\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PlusIcon className=\"h-4 w-4\" />\n\t\t\t\t\t\t\t\tProject\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={handleSend}\n\t\t\t\t\t\t\t\tdisabled={!value.trim()}\n\t\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t\t\"flex items-center justify-between gap-1 rounded-lg px-2.5 py-2.5 text-sm\",\n\t\t\t\t\t\t\t\t\tvalue.trim()\n\t\t\t\t\t\t\t\t\t\t? \"bg-black text-white dark:bg-white dark:text-black\"\n\t\t\t\t\t\t\t\t\t\t: \"bg-gray-100 text-gray-400 dark:bg-gray-800 dark:text-gray-500\",\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ArrowUpIcon\n\t\t\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t\t\t\"h-4 w-4\",\n\t\t\t\t\t\t\t\t\t\tvalue.trim()\n\t\t\t\t\t\t\t\t\t\t\t? \"text-white dark:text-black\"\n\t\t\t\t\t\t\t\t\t\t\t: \"text-gray-400 dark:text-gray-500\",\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span className=\"sr-only\">Send</span>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default VercelV0Chat;\n",
      "type": "registry:ui"
    }
  ]
}