{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "flipwords",
  "title": "Flipwords",
  "description": "A minimalistic flip words animation component designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:ui",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "flipwords.tsx",
      "content": "import { FlipWords } from \"./flipwords\";\n\nexport default function FlipwordsView() {\n\treturn (\n\t\t<div className=\"w-full max-w-4xl mx-auto p-8\">\n\t\t\t{/* Hero Section */}\n\t\t\t<div className=\"text-center space-y-6\">\n\t\t\t\t<h1 className=\"text-4xl md:text-6xl font-bold text-gray-900 dark:text-white\">\n\t\t\t\t\tI love{\" \"}\n\t\t\t\t\t<FlipWords\n\t\t\t\t\t\twords={[\n\t\t\t\t\t\t\t\"creating\",\n\t\t\t\t\t\t\t\"building\",\n\t\t\t\t\t\t\t\"designing\",\n\t\t\t\t\t\t\t\"crafting\",\n\t\t\t\t\t\t\t\"developing\",\n\t\t\t\t\t\t\t\"coding\",\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tclassName=\"text-blue-600 dark:text-blue-400\"\n\t\t\t\t\t\tduration={2500}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\tamazing experiences\n\t\t\t\t</h1>\n\t\t\t\t<p className=\"text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto\">\n\t\t\t\t\tA powerful and customizable text animation component with smooth\n\t\t\t\t\ttransitions\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:ui"
    },
    {
      "path": "flipwords.tsx",
      "content": "\"use client\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport const FlipWords = ({\n\twords,\n\tduration = 3000,\n\tclassName,\n}: {\n\twords: string[];\n\tduration?: number;\n\tclassName?: string;\n}) => {\n\tconst [currentWord, setCurrentWord] = useState(words[0]);\n\tconst [isAnimating, setIsAnimating] = useState<boolean>(false);\n\n\tconst startAnimation = useCallback(() => {\n\t\tconst word = words[words.indexOf(currentWord) + 1] || words[0];\n\t\tsetCurrentWord(word);\n\t\tsetIsAnimating(true);\n\t}, [currentWord, words]);\n\n\tuseEffect(() => {\n\t\tif (!isAnimating)\n\t\t\tsetTimeout(() => {\n\t\t\t\tstartAnimation();\n\t\t\t}, duration);\n\t}, [isAnimating, duration, startAnimation]);\n\n\treturn (\n\t\t<AnimatePresence\n\t\t\tonExitComplete={() => {\n\t\t\t\tsetIsAnimating(false);\n\t\t\t}}\n\t\t>\n\t\t\t<motion.div\n\t\t\t\tinitial={{\n\t\t\t\t\topacity: 0,\n\t\t\t\t\ty: 10,\n\t\t\t\t}}\n\t\t\t\tanimate={{\n\t\t\t\t\topacity: 1,\n\t\t\t\t\ty: 0,\n\t\t\t\t}}\n\t\t\t\ttransition={{\n\t\t\t\t\ttype: \"spring\",\n\t\t\t\t\tstiffness: 150,\n\t\t\t\t\tdamping: 15,\n\t\t\t\t\tmass: 0.8,\n\t\t\t\t}}\n\t\t\t\texit={{\n\t\t\t\t\topacity: 0,\n\t\t\t\t\ty: -40,\n\t\t\t\t\tx: 40,\n\t\t\t\t\tfilter: \"blur(8px)\",\n\t\t\t\t\tscale: 2,\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttransition: {\n\t\t\t\t\t\ttype: \"spring\",\n\t\t\t\t\t\tstiffness: 200,\n\t\t\t\t\t\tdamping: 20,\n\t\t\t\t\t\tduration: 0.4,\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"z-10 inline-block relative text-left text-neutral-900 dark:text-neutral-100 px-2\",\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\tkey={currentWord}\n\t\t\t>\n\t\t\t\t{currentWord.split(\" \").map((word, wordIndex) => (\n\t\t\t\t\t<motion.span\n\t\t\t\t\t\tkey={word + wordIndex}\n\t\t\t\t\t\tinitial={{ opacity: 0, y: 10, filter: \"blur(8px)\" }}\n\t\t\t\t\t\tanimate={{ opacity: 1, y: 0, filter: \"blur(0px)\" }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\tdelay: wordIndex * 0.3,\n\t\t\t\t\t\t\tduration: 0.4,\n\t\t\t\t\t\t\ttype: \"spring\",\n\t\t\t\t\t\t\tstiffness: 120,\n\t\t\t\t\t\t\tdamping: 12,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"inline-block whitespace-nowrap\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{word.split(\"\").map((letter, letterIndex) => (\n\t\t\t\t\t\t\t<motion.span\n\t\t\t\t\t\t\t\tkey={word + letterIndex}\n\t\t\t\t\t\t\t\tinitial={{ opacity: 0, y: 10, filter: \"blur(8px)\" }}\n\t\t\t\t\t\t\t\tanimate={{ opacity: 1, y: 0, filter: \"blur(0px)\" }}\n\t\t\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\t\t\tdelay: wordIndex * 0.3 + letterIndex * 0.05,\n\t\t\t\t\t\t\t\t\tduration: 0.3,\n\t\t\t\t\t\t\t\t\ttype: \"spring\",\n\t\t\t\t\t\t\t\t\tstiffness: 140,\n\t\t\t\t\t\t\t\t\tdamping: 14,\n\t\t\t\t\t\t\t\t\tease: [0.25, 0.46, 0.45, 0.94],\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"inline-block\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{letter}\n\t\t\t\t\t\t\t</motion.span>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<span className=\"inline-block\">&nbsp;</span>\n\t\t\t\t\t</motion.span>\n\t\t\t\t))}\n\t\t\t</motion.div>\n\t\t</AnimatePresence>\n\t);\n};\n",
      "type": "registry:ui"
    }
  ]
}