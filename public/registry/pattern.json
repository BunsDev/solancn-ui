{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern",
  "title": "Pattern",
  "description": "A collection of beautiful background patterns designed with React and Tailwind CSS.",
  "author": "Reche Soares",
  "type": "registry:component",
  "dependencies": [],
  "devDependencies": [],
  "registryDependencies": [],
  "cssVars": {
    "dark": {},
    "light": {}
  },
  "files": [
    {
      "path": "pattern.tsx",
      "content": "\"use client\";\n\nimport { Check, Copy, Eye, Heart, Search, X } from \"lucide-react\";\nimport { type CSSProperties, useRef, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { gridPatterns } from \"./patterns\";\n\n// Pattern data structure matching your patterns.ts file\ninterface Pattern {\n\tid: string;\n\tname: string;\n\tcategory: \"gradients\" | \"geometric\" | \"decorative\" | \"effects\";\n\tdescription?: string;\n\tbadge?: \"New\" | \"\";\n\tstyle: CSSProperties;\n\tcode: string;\n}\n\n// Component to render pattern preview\nfunction PatternPreview({ pattern }: { pattern: Pattern }) {\n\treturn (\n\t\t<div className=\"w-full h-full\" style={pattern.style}>\n\t\t\t<div className=\"w-full h-full flex items-center justify-center\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-800 dark:text-white opacity-80\">\n\t\t\t\t\t\t{pattern.name}\n\t\t\t\t\t</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst categories = [\n\t{ id: \"all\", label: \"All Patterns\" },\n\t{ id: \"gradients\", label: \"Gradients\" },\n\t{ id: \"geometric\", label: \"Geometric\" },\n\t{ id: \"decorative\", label: \"Decorative\" },\n\t{ id: \"effects\", label: \"Effects\" },\n\t{ id: \"favorites\", label: \"Favorites\" },\n];\n\ninterface PatternCardProps {\n\tpattern: Pattern;\n\tonPreview: (pattern: Pattern) => void;\n\tonCopy: (pattern: Pattern) => void;\n\tcopiedId: string | null;\n\tisFavorite: boolean;\n\tonToggleFavorite: (patternId: string) => void;\n}\n\nfunction PatternCard({\n\tpattern,\n\tonPreview,\n\tonCopy,\n\tcopiedId,\n\tisFavorite,\n\tonToggleFavorite,\n}: PatternCardProps) {\n\treturn (\n\t\t<div className=\"group relative bg-white dark:bg-zinc-900 rounded-xl border border-zinc-200 dark:border-zinc-800 overflow-hidden hover:shadow-lg hover:shadow-zinc-200/50 dark:hover:shadow-zinc-900/50 transition-all duration-300 hover:border-zinc-300 dark:hover:border-zinc-700 hover:-translate-y-1\">\n\t\t\t{/* Pattern Preview */}\n\t\t\t<div\n\t\t\t\tclassName=\"relative h-48 overflow-hidden cursor-pointer\"\n\t\t\t\tonClick={() => onPreview(pattern)}\n\t\t\t>\n\t\t\t\t<div className=\"absolute inset-0 scale-110 transition-transform duration-300 group-hover:scale-105\">\n\t\t\t\t\t<PatternPreview pattern={pattern} />\n\t\t\t\t</div>\n\n\t\t\t\t{/* Overlay with buttons - visible on hover/tap */}\n\t\t\t\t<div className=\"absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center gap-3 md:gap-2\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tonPreview(pattern);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"flex items-center gap-2 px-3 py-2 md:px-4 md:py-2 bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm rounded-lg text-xs md:text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:bg-white dark:hover:bg-zinc-800 transition-colors shadow-lg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Eye size={14} className=\"md:w-4 md:h-4\" />\n\t\t\t\t\t\t<span className=\"hidden sm:inline\">Preview</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tonCopy(pattern);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"flex items-center gap-2 px-3 py-2 md:px-4 md:py-2 bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm rounded-lg text-xs md:text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:bg-white dark:hover:bg-zinc-800 transition-colors shadow-lg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{copiedId === pattern.id ? (\n\t\t\t\t\t\t\t<Check size={14} className=\"md:w-4 md:h-4\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Copy size={14} className=\"md:w-4 md:h-4\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<span className=\"hidden sm:inline\">\n\t\t\t\t\t\t\t{copiedId === pattern.id ? \"Copied\" : \"Copy\"}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t{/* New badge and Favorite button */}\n\t\t\t\t<div className=\"absolute top-3 right-3 flex items-center gap-2\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tonToggleFavorite(pattern.id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\"p-1.5 rounded-full backdrop-blur-sm transition-colors shadow-lg\",\n\t\t\t\t\t\t\tisFavorite\n\t\t\t\t\t\t\t\t? \"bg-red-500/90 text-white hover:bg-red-600/90\"\n\t\t\t\t\t\t\t\t: \"bg-white/90 dark:bg-zinc-900/90 text-zinc-600 dark:text-zinc-400 hover:text-red-500 dark:hover:text-red-400\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Heart size={14} className={isFavorite ? \"fill-current\" : \"\"} />\n\t\t\t\t\t</button>\n\t\t\t\t\t{pattern.badge === \"New\" && (\n\t\t\t\t\t\t<div className=\"px-2 py-1 bg-gradient-to-r from-blue-500 to-purple-500 text-white text-xs font-medium rounded-full shadow-lg\">\n\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Pattern Info */}\n\t\t\t<div className=\"p-4\">\n\t\t\t\t<h3 className=\"font-medium text-zinc-900 dark:text-zinc-100 text-sm truncate\">\n\t\t\t\t\t{pattern.name}\n\t\t\t\t</h3>\n\t\t\t\t<p className=\"text-xs text-zinc-500 dark:text-zinc-400 mt-1 capitalize\">\n\t\t\t\t\t{pattern.category}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default function PatternCraftInterface() {\n\tconst [selectedCategory, setSelectedCategory] = useState(\"all\");\n\tconst [previewPattern, setPreviewPattern] = useState<Pattern | null>(null);\n\tconst [copiedId, setCopiedId] = useState<string | null>(null);\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\n\tconst [favorites, setFavorites] = useState<Set<string>>(new Set());\n\tconst previewRef = useRef<HTMLDivElement>(null);\n\n\tconst filteredPatterns = gridPatterns.filter((pattern) => {\n\t\tconst matchesCategory =\n\t\t\tselectedCategory === \"all\" ||\n\t\t\tpattern.category === selectedCategory ||\n\t\t\t(selectedCategory === \"favorites\" && favorites.has(pattern.id));\n\t\tconst matchesSearch = pattern.name\n\t\t\t.toLowerCase()\n\t\t\t.includes(searchQuery.toLowerCase());\n\t\treturn matchesCategory && matchesSearch;\n\t});\n\n\tconst handleToggleFavorite = (patternId: string) => {\n\t\tsetFavorites((prev) => {\n\t\t\tconst newFavorites = new Set(prev);\n\t\t\tif (newFavorites.has(patternId)) {\n\t\t\t\tnewFavorites.delete(patternId);\n\t\t\t} else {\n\t\t\t\tnewFavorites.add(patternId);\n\t\t\t}\n\t\t\treturn newFavorites;\n\t\t});\n\t};\n\n\tconst handlePreview = (pattern: Pattern) => {\n\t\tsetPreviewPattern(pattern);\n\t\t// Scroll to preview section\n\t\tsetTimeout(() => {\n\t\t\tpreviewRef.current?.scrollIntoView({ behavior: \"smooth\" });\n\t\t}, 100);\n\t};\n\n\tconst handleCopy = async (pattern: Pattern) => {\n\t\ttry {\n\t\t\t// Use the actual code from the pattern\n\t\t\tawait navigator.clipboard.writeText(pattern.code);\n\t\t\tsetCopiedId(pattern.id);\n\t\t\tsetTimeout(() => setCopiedId(null), 2000);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Failed to copy:\", error);\n\t\t\t// Fallback copy\n\t\t\tconst fallbackContent = `// ${pattern.name} Pattern\n${pattern.code}`;\n\t\t\tawait navigator.clipboard.writeText(fallbackContent);\n\t\t\tsetCopiedId(pattern.id);\n\t\t\tsetTimeout(() => setCopiedId(null), 2000);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"w-full max-w-7xl mx-auto\">\n\t\t\t{/* Header */}\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h2 className=\"text-2xl font-bold text-zinc-900 dark:text-zinc-100 mb-2\">\n\t\t\t\t\tPattern Library\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"text-zinc-600 dark:text-zinc-400\">\n\t\t\t\t\tTap on mobile or hover on desktop to see options{\" \"}\n\t\t\t\t\t<span>Inspired by PatternCraft</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{/* Search Bar */}\n\t\t\t<div className=\"max-w-md mx-auto mb-6\">\n\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t<Search\n\t\t\t\t\t\tclassName=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-zinc-400\"\n\t\t\t\t\t\tsize={20}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search patterns...\"\n\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t\t\t\tclassName=\"w-full pl-10 pr-10 py-3 bg-white dark:bg-zinc-900 border border-zinc-200 dark:border-zinc-800 rounded-lg text-zinc-900 dark:text-zinc-100 placeholder-zinc-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n\t\t\t\t\t/>\n\t\t\t\t\t{searchQuery && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => setSearchQuery(\"\")}\n\t\t\t\t\t\t\tclassName=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-zinc-400 hover:text-zinc-600 dark:hover:text-zinc-300\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<X size={20} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Category Filter */}\n\t\t\t<div className=\"flex flex-wrap justify-center gap-2 mb-8\">\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<button\n\t\t\t\t\t\tkey={category.id}\n\t\t\t\t\t\tonClick={() => setSelectedCategory(category.id)}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\"px-4 py-2 rounded-lg text-sm font-medium transition-colors\",\n\t\t\t\t\t\t\tselectedCategory === category.id\n\t\t\t\t\t\t\t\t? \"bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900\"\n\t\t\t\t\t\t\t\t: \"bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-300 hover:bg-zinc-200 dark:hover:bg-zinc-700\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{category.label}\n\t\t\t\t\t</button>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t{/* Results Counter */}\n\t\t\t<div className=\"text-center mb-6\">\n\t\t\t\t<p className=\"text-sm text-zinc-600 dark:text-zinc-400\">\n\t\t\t\t\t{filteredPatterns.length} pattern\n\t\t\t\t\t{filteredPatterns.length !== 1 ? \"s\" : \"\"} found\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{/* Pattern Grid */}\n\t\t\t{filteredPatterns.length > 0 ? (\n\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12\">\n\t\t\t\t\t{filteredPatterns.map((pattern) => (\n\t\t\t\t\t\t<PatternCard\n\t\t\t\t\t\t\tkey={pattern.id}\n\t\t\t\t\t\t\tpattern={pattern}\n\t\t\t\t\t\t\tonPreview={handlePreview}\n\t\t\t\t\t\t\tonCopy={handleCopy}\n\t\t\t\t\t\t\tcopiedId={copiedId}\n\t\t\t\t\t\t\tisFavorite={favorites.has(pattern.id)}\n\t\t\t\t\t\t\tonToggleFavorite={handleToggleFavorite}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"text-center py-12 mb-12\">\n\t\t\t\t\t<div className=\"text-zinc-400 dark:text-zinc-600 mb-4\">\n\t\t\t\t\t\t{selectedCategory === \"favorites\" ? (\n\t\t\t\t\t\t\t<Heart size={48} className=\"mx-auto\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Search size={48} className=\"mx-auto\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3 className=\"text-lg font-medium text-zinc-900 dark:text-zinc-100 mb-2\">\n\t\t\t\t\t\t{selectedCategory === \"favorites\"\n\t\t\t\t\t\t\t? \"No favorites yet\"\n\t\t\t\t\t\t\t: \"No patterns found\"}\n\t\t\t\t\t</h3>\n\t\t\t\t\t<p className=\"text-zinc-600 dark:text-zinc-400\">\n\t\t\t\t\t\t{selectedCategory === \"favorites\"\n\t\t\t\t\t\t\t? \"Click the heart icon on patterns to add them to your favorites\"\n\t\t\t\t\t\t\t: \"Try adjusting your search or category filter\"}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* Preview Section */}\n\t\t\t{previewPattern && (\n\t\t\t\t<div\n\t\t\t\t\tref={previewRef}\n\t\t\t\t\tclassName=\"border-t border-zinc-200 dark:border-zinc-800 pt-12\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"text-center mb-6\">\n\t\t\t\t\t\t<div className=\"flex items-center justify-center gap-3 mb-2\">\n\t\t\t\t\t\t\t<h3 className=\"text-xl font-bold text-zinc-900 dark:text-zinc-100\">\n\t\t\t\t\t\t\t\t{previewPattern.name}\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t{previewPattern.badge === \"New\" && (\n\t\t\t\t\t\t\t\t<span className=\"px-2 py-1 bg-gradient-to-r from-blue-500 to-purple-500 text-white text-xs font-medium rounded-full\">\n\t\t\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"text-zinc-600 dark:text-zinc-400 mb-1\">\n\t\t\t\t\t\t\tFull preview of the selected pattern\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"text-xs text-zinc-500 dark:text-zinc-400 capitalize\">\n\t\t\t\t\t\t\tCategory: {previewPattern.category}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"relative bg-zinc-50 dark:bg-zinc-950 rounded-xl border border-zinc-200 dark:border-zinc-800 overflow-hidden\">\n\t\t\t\t\t\t<div className=\"h-[500px] md:h-[600px] lg:h-[700px]\">\n\t\t\t\t\t\t\t<PatternPreview pattern={previewPattern} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Preview Controls */}\n\t\t\t\t\t\t<div className=\"absolute top-4 right-4 flex gap-2\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => setPreviewPattern(null)}\n\t\t\t\t\t\t\t\tclassName=\"flex items-center gap-2 px-3 py-2 bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm rounded-lg text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:bg-white dark:hover:bg-zinc-800 transition-colors shadow-lg\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<X size={16} />\n\t\t\t\t\t\t\t\t<span className=\"hidden sm:inline\">Close</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => handleCopy(previewPattern)}\n\t\t\t\t\t\t\t\tclassName=\"flex items-center gap-2 px-3 py-2 bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm rounded-lg text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:bg-white dark:hover:bg-zinc-800 transition-colors shadow-lg\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{copiedId === previewPattern.id ? (\n\t\t\t\t\t\t\t\t\t<Check size={16} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Copy size={16} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{copiedId === previewPattern.id ? \"Copied\" : \"Copy Code\"}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    },
    {
      "path": "pattern-craft-interface.tsx",
      "content": "\"use client\";\n\nimport { Check, Copy, Eye, Heart, Search, X } from \"lucide-react\";\nimport { type CSSProperties, useRef, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { gridPatterns } from \"./patterns\";\n\n// Pattern data structure matching your patterns.ts file\ninterface Pattern {\n\tid: string;\n\tname: string;\n\tcategory: \"gradients\" | \"geometric\" | \"decorative\" | \"effects\";\n\tdescription?: string;\n\tbadge?: \"New\" | \"\";\n\tstyle: CSSProperties;\n\tcode: string;\n}\n\n// Component to render pattern preview\nfunction PatternPreview({ pattern }: { pattern: Pattern }) {\n\treturn (\n\t\t<div className=\"w-full h-full\" style={pattern.style}>\n\t\t\t<div className=\"w-full h-full flex items-center justify-center\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h3 className=\"text-lg font-semibold text-gray-800 dark:text-white opacity-80\">\n\t\t\t\t\t\t{pattern.name}\n\t\t\t\t\t</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst categories = [\n\t{ id: \"all\", label: \"All Patterns\" },\n\t{ id: \"gradients\", label: \"Gradients\" },\n\t{ id: \"geometric\", label: \"Geometric\" },\n\t{ id: \"decorative\", label: \"Decorative\" },\n\t{ id: \"effects\", label: \"Effects\" },\n\t{ id: \"favorites\", label: \"Favorites\" },\n];\n\ninterface PatternCardProps {\n\tpattern: Pattern;\n\tonPreview: (pattern: Pattern) => void;\n\tonCopy: (pattern: Pattern) => void;\n\tcopiedId: string | null;\n\tisFavorite: boolean;\n\tonToggleFavorite: (patternId: string) => void;\n}\n\nfunction PatternCard({\n\tpattern,\n\tonPreview,\n\tonCopy,\n\tcopiedId,\n\tisFavorite,\n\tonToggleFavorite,\n}: PatternCardProps) {\n\treturn (\n\t\t<div className=\"group relative bg-white dark:bg-zinc-900 rounded-xl border border-zinc-200 dark:border-zinc-800 overflow-hidden hover:shadow-lg hover:shadow-zinc-200/50 dark:hover:shadow-zinc-900/50 transition-all duration-300 hover:border-zinc-300 dark:hover:border-zinc-700 hover:-translate-y-1\">\n\t\t\t{/* Pattern Preview */}\n\t\t\t<div\n\t\t\t\tclassName=\"relative h-48 overflow-hidden cursor-pointer\"\n\t\t\t\tonClick={() => onPreview(pattern)}\n\t\t\t>\n\t\t\t\t<div className=\"absolute inset-0 scale-110 transition-transform duration-300 group-hover:scale-105\">\n\t\t\t\t\t<PatternPreview pattern={pattern} />\n\t\t\t\t</div>\n\n\t\t\t\t{/* Overlay with buttons - visible on hover/tap */}\n\t\t\t\t<div className=\"absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center gap-3 md:gap-2\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tonPreview(pattern);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"flex items-center gap-2 px-3 py-2 md:px-4 md:py-2 bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm rounded-lg text-xs md:text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:bg-white dark:hover:bg-zinc-800 transition-colors shadow-lg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Eye size={14} className=\"md:w-4 md:h-4\" />\n\t\t\t\t\t\t<span className=\"hidden sm:inline\">Preview</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tonCopy(pattern);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"flex items-center gap-2 px-3 py-2 md:px-4 md:py-2 bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm rounded-lg text-xs md:text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:bg-white dark:hover:bg-zinc-800 transition-colors shadow-lg\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{copiedId === pattern.id ? (\n\t\t\t\t\t\t\t<Check size={14} className=\"md:w-4 md:h-4\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Copy size={14} className=\"md:w-4 md:h-4\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<span className=\"hidden sm:inline\">\n\t\t\t\t\t\t\t{copiedId === pattern.id ? \"Copied\" : \"Copy\"}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t{/* New badge and Favorite button */}\n\t\t\t\t<div className=\"absolute top-3 right-3 flex items-center gap-2\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tonToggleFavorite(pattern.id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\"p-1.5 rounded-full backdrop-blur-sm transition-colors shadow-lg\",\n\t\t\t\t\t\t\tisFavorite\n\t\t\t\t\t\t\t\t? \"bg-red-500/90 text-white hover:bg-red-600/90\"\n\t\t\t\t\t\t\t\t: \"bg-white/90 dark:bg-zinc-900/90 text-zinc-600 dark:text-zinc-400 hover:text-red-500 dark:hover:text-red-400\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Heart size={14} className={isFavorite ? \"fill-current\" : \"\"} />\n\t\t\t\t\t</button>\n\t\t\t\t\t{pattern.badge === \"New\" && (\n\t\t\t\t\t\t<div className=\"px-2 py-1 bg-gradient-to-r from-blue-500 to-purple-500 text-white text-xs font-medium rounded-full shadow-lg\">\n\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Pattern Info */}\n\t\t\t<div className=\"p-4\">\n\t\t\t\t<h3 className=\"font-medium text-zinc-900 dark:text-zinc-100 text-sm truncate\">\n\t\t\t\t\t{pattern.name}\n\t\t\t\t</h3>\n\t\t\t\t<p className=\"text-xs text-zinc-500 dark:text-zinc-400 mt-1 capitalize\">\n\t\t\t\t\t{pattern.category}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default function PatternCraftInterface() {\n\tconst [selectedCategory, setSelectedCategory] = useState(\"all\");\n\tconst [previewPattern, setPreviewPattern] = useState<Pattern | null>(null);\n\tconst [copiedId, setCopiedId] = useState<string | null>(null);\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\n\tconst [favorites, setFavorites] = useState<Set<string>>(new Set());\n\tconst previewRef = useRef<HTMLDivElement>(null);\n\n\tconst filteredPatterns = gridPatterns.filter((pattern) => {\n\t\tconst matchesCategory =\n\t\t\tselectedCategory === \"all\" ||\n\t\t\tpattern.category === selectedCategory ||\n\t\t\t(selectedCategory === \"favorites\" && favorites.has(pattern.id));\n\t\tconst matchesSearch = pattern.name\n\t\t\t.toLowerCase()\n\t\t\t.includes(searchQuery.toLowerCase());\n\t\treturn matchesCategory && matchesSearch;\n\t});\n\n\tconst handleToggleFavorite = (patternId: string) => {\n\t\tsetFavorites((prev) => {\n\t\t\tconst newFavorites = new Set(prev);\n\t\t\tif (newFavorites.has(patternId)) {\n\t\t\t\tnewFavorites.delete(patternId);\n\t\t\t} else {\n\t\t\t\tnewFavorites.add(patternId);\n\t\t\t}\n\t\t\treturn newFavorites;\n\t\t});\n\t};\n\n\tconst handlePreview = (pattern: Pattern) => {\n\t\tsetPreviewPattern(pattern);\n\t\t// Scroll to preview section\n\t\tsetTimeout(() => {\n\t\t\tpreviewRef.current?.scrollIntoView({ behavior: \"smooth\" });\n\t\t}, 100);\n\t};\n\n\tconst handleCopy = async (pattern: Pattern) => {\n\t\ttry {\n\t\t\t// Use the actual code from the pattern\n\t\t\tawait navigator.clipboard.writeText(pattern.code);\n\t\t\tsetCopiedId(pattern.id);\n\t\t\tsetTimeout(() => setCopiedId(null), 2000);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Failed to copy:\", error);\n\t\t\t// Fallback copy\n\t\t\tconst fallbackContent = `// ${pattern.name} Pattern\n${pattern.code}`;\n\t\t\tawait navigator.clipboard.writeText(fallbackContent);\n\t\t\tsetCopiedId(pattern.id);\n\t\t\tsetTimeout(() => setCopiedId(null), 2000);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"w-full max-w-7xl mx-auto\">\n\t\t\t{/* Header */}\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h2 className=\"text-2xl font-bold text-zinc-900 dark:text-zinc-100 mb-2\">\n\t\t\t\t\tPattern Library\n\t\t\t\t</h2>\n\t\t\t\t<p className=\"text-zinc-600 dark:text-zinc-400\">\n\t\t\t\t\tTap on mobile or hover on desktop to see options{\" \"}\n\t\t\t\t\t<span>Inspired by PatternCraft</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{/* Search Bar */}\n\t\t\t<div className=\"max-w-md mx-auto mb-6\">\n\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t<Search\n\t\t\t\t\t\tclassName=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-zinc-400\"\n\t\t\t\t\t\tsize={20}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Search patterns...\"\n\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\t\t\t\tclassName=\"w-full pl-10 pr-10 py-3 bg-white dark:bg-zinc-900 border border-zinc-200 dark:border-zinc-800 rounded-lg text-zinc-900 dark:text-zinc-100 placeholder-zinc-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n\t\t\t\t\t/>\n\t\t\t\t\t{searchQuery && (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => setSearchQuery(\"\")}\n\t\t\t\t\t\t\tclassName=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-zinc-400 hover:text-zinc-600 dark:hover:text-zinc-300\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<X size={20} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Category Filter */}\n\t\t\t<div className=\"flex flex-wrap justify-center gap-2 mb-8\">\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<button\n\t\t\t\t\t\tkey={category.id}\n\t\t\t\t\t\tonClick={() => setSelectedCategory(category.id)}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\"px-4 py-2 rounded-lg text-sm font-medium transition-colors\",\n\t\t\t\t\t\t\tselectedCategory === category.id\n\t\t\t\t\t\t\t\t? \"bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900\"\n\t\t\t\t\t\t\t\t: \"bg-zinc-100 dark:bg-zinc-800 text-zinc-700 dark:text-zinc-300 hover:bg-zinc-200 dark:hover:bg-zinc-700\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{category.label}\n\t\t\t\t\t</button>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t{/* Results Counter */}\n\t\t\t<div className=\"text-center mb-6\">\n\t\t\t\t<p className=\"text-sm text-zinc-600 dark:text-zinc-400\">\n\t\t\t\t\t{filteredPatterns.length} pattern\n\t\t\t\t\t{filteredPatterns.length !== 1 ? \"s\" : \"\"} found\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t{/* Pattern Grid */}\n\t\t\t{filteredPatterns.length > 0 ? (\n\t\t\t\t<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12\">\n\t\t\t\t\t{filteredPatterns.map((pattern) => (\n\t\t\t\t\t\t<PatternCard\n\t\t\t\t\t\t\tkey={pattern.id}\n\t\t\t\t\t\t\tpattern={pattern}\n\t\t\t\t\t\t\tonPreview={handlePreview}\n\t\t\t\t\t\t\tonCopy={handleCopy}\n\t\t\t\t\t\t\tcopiedId={copiedId}\n\t\t\t\t\t\t\tisFavorite={favorites.has(pattern.id)}\n\t\t\t\t\t\t\tonToggleFavorite={handleToggleFavorite}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"text-center py-12 mb-12\">\n\t\t\t\t\t<div className=\"text-zinc-400 dark:text-zinc-600 mb-4\">\n\t\t\t\t\t\t{selectedCategory === \"favorites\" ? (\n\t\t\t\t\t\t\t<Heart size={48} className=\"mx-auto\" />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Search size={48} className=\"mx-auto\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3 className=\"text-lg font-medium text-zinc-900 dark:text-zinc-100 mb-2\">\n\t\t\t\t\t\t{selectedCategory === \"favorites\"\n\t\t\t\t\t\t\t? \"No favorites yet\"\n\t\t\t\t\t\t\t: \"No patterns found\"}\n\t\t\t\t\t</h3>\n\t\t\t\t\t<p className=\"text-zinc-600 dark:text-zinc-400\">\n\t\t\t\t\t\t{selectedCategory === \"favorites\"\n\t\t\t\t\t\t\t? \"Click the heart icon on patterns to add them to your favorites\"\n\t\t\t\t\t\t\t: \"Try adjusting your search or category filter\"}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{/* Preview Section */}\n\t\t\t{previewPattern && (\n\t\t\t\t<div\n\t\t\t\t\tref={previewRef}\n\t\t\t\t\tclassName=\"border-t border-zinc-200 dark:border-zinc-800 pt-12\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"text-center mb-6\">\n\t\t\t\t\t\t<div className=\"flex items-center justify-center gap-3 mb-2\">\n\t\t\t\t\t\t\t<h3 className=\"text-xl font-bold text-zinc-900 dark:text-zinc-100\">\n\t\t\t\t\t\t\t\t{previewPattern.name}\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t{previewPattern.badge === \"New\" && (\n\t\t\t\t\t\t\t\t<span className=\"px-2 py-1 bg-gradient-to-r from-blue-500 to-purple-500 text-white text-xs font-medium rounded-full\">\n\t\t\t\t\t\t\t\t\tNew\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"text-zinc-600 dark:text-zinc-400 mb-1\">\n\t\t\t\t\t\t\tFull preview of the selected pattern\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"text-xs text-zinc-500 dark:text-zinc-400 capitalize\">\n\t\t\t\t\t\t\tCategory: {previewPattern.category}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"relative bg-zinc-50 dark:bg-zinc-950 rounded-xl border border-zinc-200 dark:border-zinc-800 overflow-hidden\">\n\t\t\t\t\t\t<div className=\"h-[500px] md:h-[600px] lg:h-[700px]\">\n\t\t\t\t\t\t\t<PatternPreview pattern={previewPattern} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Preview Controls */}\n\t\t\t\t\t\t<div className=\"absolute top-4 right-4 flex gap-2\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => setPreviewPattern(null)}\n\t\t\t\t\t\t\t\tclassName=\"flex items-center gap-2 px-3 py-2 bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm rounded-lg text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:bg-white dark:hover:bg-zinc-800 transition-colors shadow-lg\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<X size={16} />\n\t\t\t\t\t\t\t\t<span className=\"hidden sm:inline\">Close</span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => handleCopy(previewPattern)}\n\t\t\t\t\t\t\t\tclassName=\"flex items-center gap-2 px-3 py-2 bg-white/90 dark:bg-zinc-900/90 backdrop-blur-sm rounded-lg text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:bg-white dark:hover:bg-zinc-800 transition-colors shadow-lg\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{copiedId === previewPattern.id ? (\n\t\t\t\t\t\t\t\t\t<Check size={16} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Copy size={16} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{copiedId === previewPattern.id ? \"Copied\" : \"Copy Code\"}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component"
    }
  ]
}