{
	"$schema": "https://ui.shadcn.com/schema/registry-item.json",
	"name": "spotlightcard",
	"title": "Spotlightcard",
	"description": "A minimalistic spotlightcard component designed with React and Tailwind CSS.",
	"author": "Reche Soares",
	"type": "registry:ui",
	"dependencies": [],
	"devDependencies": [],
	"registryDependencies": [],
	"cssVars": {
		"dark": {},
		"light": {}
	},
	"files": [
		{
			"path": "spotlightcard.tsx",
			"content": "'use client'\nimport GlowCard from \"./spotlight-card\"\n\nexport default function SpotlightCardView() {\n  return (\n   <div className=\"w-screen flex flex-row items-center justify-center gap-10 custom-cursor\">\n      <GlowCard>\n        <span className=\"text-white text-6xl flex items-center justify-center\">ðŸ˜Ž</span>\n      </GlowCard>\n    </div>\n  )\n}\n",
			"type": "registry:ui"
		},
		{
			"path": "spotlight-card.tsx",
			"content": "'use client'\nimport * as React from 'react';\nimport { useEffect, useRef, ReactNode, CSSProperties } from 'react';\n\ninterface GlowCardProps {\n  children?: ReactNode;\n  className?: string;\n  glowColor?: 'blue' | 'purple' | 'green' | 'red' | 'orange';\n  size?: 'sm' | 'md' | 'lg';\n  width?: string | number;\n  height?: string | number;\n  customSize?: boolean; // When true, ignores size prop and uses width/height or className\n}\n\nconst glowColorMap = {\n  blue: { base: 220, spread: 200 },\n  purple: { base: 280, spread: 300 },\n  green: { base: 120, spread: 200 },\n  red: { base: 0, spread: 200 },\n  orange: { base: 30, spread: 200 }\n};\n\nconst sizeMap = {\n  sm: 'w-48 h-64',\n  md: 'w-64 h-80',\n  lg: 'w-80 h-96'\n};\n\nconst GlowCard: React.FC<GlowCardProps> = ({ \n  children, \n  className = '', \n  glowColor = 'blue',\n  size = 'md',\n  width,\n  height,\n  customSize = false\n}) => {\n  const cardRef = useRef<HTMLDivElement>(null);\n  const innerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const syncPointer = (e: PointerEvent) => {\n      const { clientX: x, clientY: y } = e;\n      \n      if (cardRef.current) {\n        cardRef.current.style.setProperty('--x', x.toFixed(2));\n        cardRef.current.style.setProperty('--xp', (x / window.innerWidth).toFixed(2));\n        cardRef.current.style.setProperty('--y', y.toFixed(2));\n        cardRef.current.style.setProperty('--yp', (y / window.innerHeight).toFixed(2));\n      }\n    };\n\n    document.addEventListener('pointermove', syncPointer);\n    return () => document.removeEventListener('pointermove', syncPointer);\n  }, []);\n\n  const { base, spread } = glowColorMap[glowColor];\n\n  // Determine sizing\n  const getSizeClasses = () => {\n    if (customSize) {\n      return ''; // Let className or inline styles handle sizing\n    }\n    return sizeMap[size];\n  };\n\n  const getInlineStyles = (): CSSProperties & Record<string, string | number> => {\n    const baseStyles: CSSProperties & Record<string, string | number> = {\n      '--base': base,\n      '--spread': spread,\n      '--radius': '14',\n      '--border': '3',\n      '--backdrop': 'hsl(0 0% 60% / 0.12)',\n      '--backup-border': 'var(--backdrop)',\n      '--size': '200',\n      '--outer': '1',\n      '--border-size': 'calc(var(--border, 2) * 1px)',\n      '--spotlight-size': 'calc(var(--size, 150) * 1px)',\n      '--hue': 'calc(var(--base) + (var(--xp, 0) * var(--spread, 0)))',\n      backgroundImage: `radial-gradient(\n        var(--spotlight-size) var(--spotlight-size) at\n        calc(var(--x, 0) * 1px)\n        calc(var(--y, 0) * 1px),\n        hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 70) * 1%) / var(--bg-spot-opacity, 0.1)), transparent\n      )`,\n      backgroundColor: 'var(--backdrop, transparent)',\n      backgroundSize: 'calc(100% + (2 * var(--border-size))) calc(100% + (2 * var(--border-size)))',\n      backgroundPosition: '50% 50%',\n      backgroundAttachment: 'fixed',\n      border: 'var(--border-size) solid var(--backup-border)',\n      position: 'relative' as const,\n      touchAction: 'none' as const,\n    };\n\n    // Add width and height if provided\n    if (width !== undefined) {\n      baseStyles.width = typeof width === 'number' ? `${width}px` : width;\n    }\n    if (height !== undefined) {\n      baseStyles.height = typeof height === 'number' ? `${height}px` : height;\n    }\n\n    return baseStyles;\n  };\n\n  const beforeAfterStyles = `\n    [data-glow]::before,\n    [data-glow]::after {\n      pointer-events: none;\n      content: \"\";\n      position: absolute;\n      inset: calc(var(--border-size) * -1);\n      border: var(--border-size) solid transparent;\n      border-radius: calc(var(--radius) * 1px);\n      background-attachment: fixed;\n      background-size: calc(100% + (2 * var(--border-size))) calc(100% + (2 * var(--border-size)));\n      background-repeat: no-repeat;\n      background-position: 50% 50%;\n      mask: linear-gradient(transparent, transparent), linear-gradient(white, white);\n      mask-clip: padding-box, border-box;\n      mask-composite: intersect;\n    }\n    \n    [data-glow]::before {\n      background-image: radial-gradient(\n        calc(var(--spotlight-size) * 0.75) calc(var(--spotlight-size) * 0.75) at\n        calc(var(--x, 0) * 1px)\n        calc(var(--y, 0) * 1px),\n        hsl(var(--hue, 210) calc(var(--saturation, 100) * 1%) calc(var(--lightness, 50) * 1%) / var(--border-spot-opacity, 1)), transparent 100%\n      );\n      filter: brightness(2);\n    }\n    \n    [data-glow]::after {\n      background-image: radial-gradient(\n        calc(var(--spotlight-size) * 0.5) calc(var(--spotlight-size) * 0.5) at\n        calc(var(--x, 0) * 1px)\n        calc(var(--y, 0) * 1px),\n        hsl(0 100% 100% / var(--border-light-opacity, 1)), transparent 100%\n      );\n    }\n    \n    [data-glow] [data-glow] {\n      position: absolute;\n      inset: 0;\n      will-change: filter;\n      opacity: var(--outer, 1);\n      border-radius: calc(var(--radius) * 1px);\n      border-width: calc(var(--border-size) * 20);\n      filter: blur(calc(var(--border-size) * 10));\n      background: none;\n      pointer-events: none;\n      border: none;\n    }\n    \n    [data-glow] > [data-glow]::before {\n      inset: -10px;\n      border-width: 10px;\n    }\n  `;\n\n  return (\n    <>\n      <style dangerouslySetInnerHTML={{ __html: beforeAfterStyles }} />\n      <div\n        ref={cardRef}\n        data-glow\n        style={getInlineStyles()}\n        className={`\n          ${getSizeClasses()}\n          ${!customSize ? 'aspect-[3/4]' : ''}\n          rounded-2xl \n          relative \n          grid \n          grid-rows-[1fr_auto] \n          shadow-[0_1rem_2rem_-1rem_black] \n          p-4 \n          gap-4 \n          backdrop-blur-[5px]\n          ${className}\n        `}\n      >\n        <div ref={innerRef} data-glow></div>\n        {children}\n      </div>\n    </>\n  );\n};\n\nexport default GlowCard",
			"type": "registry:ui"
		},
		{
			"path": "spotlightcard.tsx",
			"content": "'use client'\nimport React from \"react\";\n\nexport default function SpotlightCard() {\n  return (\n    <>\n      <style jsx>{`\n        @property --border-angle {\n          syntax: \"<angle>\";\n          inherits: true;\n          initial-value: 0deg;\n        }\n\n        /* * Keyframes for the border animation.\n         * We animate the --border-angle custom property from 0deg to 360deg.\n         * This changing angle is used in the conic-gradient background of the card,\n         * creating the effect of a rotating highlight.\n        */\n        @keyframes border-spin {\n          100% {\n            --border-angle: 360deg;\n          }\n        }\n\n        /* * The .animate-border class applies the animation.\n         * The animation 'border-spin' runs for 6 seconds, is linear, and repeats infinitely.\n        */\n        .animate-border {\n            animation: border-spin 6s linear infinite;\n        }\n      `}</style>\n    <div className=\"w-full flex items-center justify-center p-4\">\n      {/* * The outer div creates the animated border effect.\n       * The accent color has been changed to a teal/cyan theme.\n       */}\n      <div className=\"w-full max-w-[422px] mx-auto [background:linear-gradient(45deg,#080b11,theme(colors.slate.800)_50%,#172033)_padding-box,conic-gradient(from_var(--border-angle),theme(colors.slate.600/.48)_80%,theme(colors.teal.500)_86%,theme(colors.cyan.300)_90%,theme(colors.teal.500)_94%,theme(colors.slate.600/.48))_border-box] rounded-2xl border border-transparent animate-border\">\n        {/* The inner div holds the content, with the grid background image style. */}\n        <div className=\"relative text-center z-10 px-8 py-12 rounded-2xl w-full bg-white dark:bg-black h-full mx-auto\">\n          {/* Card Header */}\n          <h1 className=\"text-2xl font-bold tracking-tight text-black dark:text-white\">\n            Sign In\n          </h1>\n          <p className=\"text-sm mt-2 text-gray-600 dark:text-slate-400\">\n            Choose your preferred login method\n          </p>\n\n          {/* Login Buttons Container */}\n          <div className=\"flex flex-col gap-4 mt-8\">\n            {/* Google Login Button */}\n            <button className=\"flex items-center justify-center gap-3 w-full px-4 py-2.5 bg-gray-100 dark:bg-slate-800/60 backdrop-blur-sm text-black dark:text-white rounded-lg border border-gray-300 dark:border-slate-700 hover:bg-gray-200 dark:hover:bg-slate-700/60 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-slate-900 focus:ring-cyan-400\">\n              {/* New, cleaner Google SVG Icon */}\n              <svg\n                className=\"w-5 h-5\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 48 48\"\n              >\n                <path\n                  fill=\"#FFC107\"\n                  d=\"M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12s5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24s8.955,20,20,20s20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z\"\n                ></path>\n                <path\n                  fill=\"#FF3D00\"\n                  d=\"M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z\"\n                ></path>\n                <path\n                  fill=\"#4CAF50\"\n                  d=\"M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z\"\n                ></path>\n                <path\n                  fill=\"#1976D2\"\n                  d=\"M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.574l6.19,5.238C42.022,35.244,44,30.036,44,24C44,22.659,43.862,21.35,43.611,20.083z\"\n                ></path>\n              </svg>\n              <span>Sign in with Google</span>\n            </button>\n\n            {/* GitHub Login Button */}\n            <button className=\"flex items-center justify-center gap-3 w-full px-4 py-2.5 bg-gray-100 dark:bg-slate-800/60 backdrop-blur-sm text-black dark:text-white rounded-lg border border-gray-300 dark:border-slate-700 hover:bg-gray-200 dark:hover:bg-slate-700/60 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-slate-900 focus:ring-cyan-400\">\n              {/* GitHub SVG Icon */}\n              <svg\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M12 2C6.477 2 2 6.477 2 12c0 4.418 2.865 8.166 6.839 9.49.5.092.682-.217.682-.482 0-.237-.009-.868-.014-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.031-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.378.203 2.398.1 2.651.64.7 1.03 1.595 1.03 2.688 0 3.848-2.338 4.695-4.566 4.942.359.308.678.92.678 1.852 0 1.338-.012 2.419-.012 2.747 0 .268.18.577.688.482A10.001 10.001 0 0022 12c0-5.523-4.477-10-10-10z\"\n                />\n              </svg>\n              <span>Sign in with GitHub</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n",
			"type": "registry:ui"
		}
	]
}
